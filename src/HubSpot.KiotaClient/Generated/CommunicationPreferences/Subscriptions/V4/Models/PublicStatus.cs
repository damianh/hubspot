// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicStatus : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The businessUnitId property</summary>
        public long? BusinessUnitId { get; set; }
        /// <summary>The channel property</summary>
        public global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_channel? Channel { get; set; }
        /// <summary>The legalBasis property</summary>
        public global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_legalBasis? LegalBasis { get; set; }
        /// <summary>The legalBasisExplanation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LegalBasisExplanation { get; set; }
#nullable restore
#else
        public string LegalBasisExplanation { get; set; }
#endif
        /// <summary>The setStatusSuccessReason property</summary>
        public global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_setStatusSuccessReason? SetStatusSuccessReason { get; set; }
        /// <summary>The source property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_status? Status { get; set; }
        /// <summary>The subscriberIdString property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriberIdString { get; set; }
#nullable restore
#else
        public string SubscriberIdString { get; set; }
#endif
        /// <summary>The subscriptionId property</summary>
        public int? SubscriptionId { get; set; }
        /// <summary>The subscriptionName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriptionName { get; set; }
#nullable restore
#else
        public string SubscriptionName { get; set; }
#endif
        /// <summary>The timestamp property</summary>
        public DateTimeOffset? Timestamp { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus"/> and sets the default values.
        /// </summary>
        public PublicStatus()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "businessUnitId", n => { BusinessUnitId = n.GetLongValue(); } },
                { "channel", n => { Channel = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_channel>(); } },
                { "legalBasis", n => { LegalBasis = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_legalBasis>(); } },
                { "legalBasisExplanation", n => { LegalBasisExplanation = n.GetStringValue(); } },
                { "setStatusSuccessReason", n => { SetStatusSuccessReason = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_setStatusSuccessReason>(); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_status>(); } },
                { "subscriberIdString", n => { SubscriberIdString = n.GetStringValue(); } },
                { "subscriptionId", n => { SubscriptionId = n.GetIntValue(); } },
                { "subscriptionName", n => { SubscriptionName = n.GetStringValue(); } },
                { "timestamp", n => { Timestamp = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("businessUnitId", BusinessUnitId);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_channel>("channel", Channel);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_legalBasis>("legalBasis", LegalBasis);
            writer.WriteStringValue("legalBasisExplanation", LegalBasisExplanation);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_setStatusSuccessReason>("setStatusSuccessReason", SetStatusSuccessReason);
            writer.WriteStringValue("source", Source);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CommunicationPreferences.Subscriptions.V4.Models.PublicStatus_status>("status", Status);
            writer.WriteStringValue("subscriberIdString", SubscriberIdString);
            writer.WriteIntValue("subscriptionId", SubscriptionId);
            writer.WriteStringValue("subscriptionName", SubscriptionName);
            writer.WriteDateTimeOffsetValue("timestamp", Timestamp);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
