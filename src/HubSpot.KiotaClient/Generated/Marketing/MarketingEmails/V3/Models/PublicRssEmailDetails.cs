// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models
{
    /// <summary>
    /// RSS related data if it is a blog or rss email.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PublicRssEmailDetails : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The blogEmailType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BlogEmailType { get; set; }
#nullable restore
#else
        public string BlogEmailType { get; set; }
#endif
        /// <summary>The blogImageMaxWidth property</summary>
        public int? BlogImageMaxWidth { get; set; }
        /// <summary>The blogLayout property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BlogLayout { get; set; }
#nullable restore
#else
        public string BlogLayout { get; set; }
#endif
        /// <summary>The hubspotBlogId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HubspotBlogId { get; set; }
#nullable restore
#else
        public string HubspotBlogId { get; set; }
#endif
        /// <summary>The maxEntries property</summary>
        public int? MaxEntries { get; set; }
        /// <summary>The rssEntryTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RssEntryTemplate { get; set; }
#nullable restore
#else
        public string RssEntryTemplate { get; set; }
#endif
        /// <summary>The timing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails_timing? Timing { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails_timing Timing { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The useHeadlineAsSubject property</summary>
        public bool? UseHeadlineAsSubject { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails"/> and sets the default values.
        /// </summary>
        public PublicRssEmailDetails()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "blogEmailType", n => { BlogEmailType = n.GetStringValue(); } },
                { "blogImageMaxWidth", n => { BlogImageMaxWidth = n.GetIntValue(); } },
                { "blogLayout", n => { BlogLayout = n.GetStringValue(); } },
                { "hubspotBlogId", n => { HubspotBlogId = n.GetStringValue(); } },
                { "maxEntries", n => { MaxEntries = n.GetIntValue(); } },
                { "rssEntryTemplate", n => { RssEntryTemplate = n.GetStringValue(); } },
                { "timing", n => { Timing = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails_timing>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails_timing.CreateFromDiscriminatorValue); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "useHeadlineAsSubject", n => { UseHeadlineAsSubject = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("blogEmailType", BlogEmailType);
            writer.WriteIntValue("blogImageMaxWidth", BlogImageMaxWidth);
            writer.WriteStringValue("blogLayout", BlogLayout);
            writer.WriteStringValue("hubspotBlogId", HubspotBlogId);
            writer.WriteIntValue("maxEntries", MaxEntries);
            writer.WriteStringValue("rssEntryTemplate", RssEntryTemplate);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmails.V3.Models.PublicRssEmailDetails_timing>("timing", Timing);
            writer.WriteStringValue("url", Url);
            writer.WriteBoolValue("useHeadlineAsSubject", UseHeadlineAsSubject);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
