// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models
{
    /// <summary>
    /// Properties of a marketing email you can set when creating a marketing email.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EmailCreateRequest : IAdditionalDataHolder, IParsable
    {
        /// <summary>The active domain of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActiveDomain { get; set; }
#nullable restore
#else
        public string ActiveDomain { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Determines if the email is archived or not.</summary>
        public bool? Archived { get; set; }
        /// <summary>The businessUnitId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessUnitId { get; set; }
#nullable restore
#else
        public string BusinessUnitId { get; set; }
#endif
        /// <summary>The ID of the campaign this email is associated to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Campaign { get; set; }
#nullable restore
#else
        public string Campaign { get; set; }
#endif
        /// <summary>Data structure representing the content of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailContent? Content { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailContent Content { get; set; }
#endif
        /// <summary>The ID of the feedback survey linked to the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeedbackSurveyId { get; set; }
#nullable restore
#else
        public string FeedbackSurveyId { get; set; }
#endif
        /// <summary>Data structure representing the from fields on the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailFromDetails? From { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailFromDetails From { get; set; }
#endif
        /// <summary>The language property</summary>
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_language? Language { get; set; }
        /// <summary>The name of the email, as displayed on the email dashboard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The date and time the email is scheduled for, in ISO8601 representation. This is only used in local time or scheduled emails.</summary>
        public DateTimeOffset? PublishDate { get; set; }
        /// <summary>RSS related data if it is a blog or rss email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicRssEmailDetails? RssData { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicRssEmailDetails RssData { get; set; }
#endif
        /// <summary>Determines whether the email will be sent immediately on publish.</summary>
        public bool? SendOnPublish { get; set; }
        /// <summary>The email state.</summary>
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_state? State { get; set; }
        /// <summary>The email subcategory.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subcategory { get; set; }
#nullable restore
#else
        public string Subcategory { get; set; }
#endif
        /// <summary>The subject of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>Data structure representing the subscription fields of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailSubscriptionDetails? SubscriptionDetails { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailSubscriptionDetails SubscriptionDetails { get; set; }
#endif
        /// <summary>AB testing related data. This property is only returned for AB type emails.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailTestingDetails? Testing { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailTestingDetails Testing { get; set; }
#endif
        /// <summary>Data structure representing the to fields of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailToDetails? To { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailToDetails To { get; set; }
#endif
        /// <summary>The webversion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicWebversionDetails? Webversion { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicWebversionDetails Webversion { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest"/> and sets the default values.
        /// </summary>
        public EmailCreateRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activeDomain", n => { ActiveDomain = n.GetStringValue(); } },
                { "archived", n => { Archived = n.GetBoolValue(); } },
                { "businessUnitId", n => { BusinessUnitId = n.GetStringValue(); } },
                { "campaign", n => { Campaign = n.GetStringValue(); } },
                { "content", n => { Content = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailContent>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailContent.CreateFromDiscriminatorValue); } },
                { "feedbackSurveyId", n => { FeedbackSurveyId = n.GetStringValue(); } },
                { "from", n => { From = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailFromDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailFromDetails.CreateFromDiscriminatorValue); } },
                { "language", n => { Language = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_language>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "publishDate", n => { PublishDate = n.GetDateTimeOffsetValue(); } },
                { "rssData", n => { RssData = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicRssEmailDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicRssEmailDetails.CreateFromDiscriminatorValue); } },
                { "sendOnPublish", n => { SendOnPublish = n.GetBoolValue(); } },
                { "state", n => { State = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_state>(); } },
                { "subcategory", n => { Subcategory = n.GetStringValue(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "subscriptionDetails", n => { SubscriptionDetails = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailSubscriptionDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailSubscriptionDetails.CreateFromDiscriminatorValue); } },
                { "testing", n => { Testing = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailTestingDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailTestingDetails.CreateFromDiscriminatorValue); } },
                { "to", n => { To = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailToDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailToDetails.CreateFromDiscriminatorValue); } },
                { "webversion", n => { Webversion = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicWebversionDetails>(global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicWebversionDetails.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("activeDomain", ActiveDomain);
            writer.WriteBoolValue("archived", Archived);
            writer.WriteStringValue("businessUnitId", BusinessUnitId);
            writer.WriteStringValue("campaign", Campaign);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailContent>("content", Content);
            writer.WriteStringValue("feedbackSurveyId", FeedbackSurveyId);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailFromDetails>("from", From);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_language>("language", Language);
            writer.WriteStringValue("name", Name);
            writer.WriteDateTimeOffsetValue("publishDate", PublishDate);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicRssEmailDetails>("rssData", RssData);
            writer.WriteBoolValue("sendOnPublish", SendOnPublish);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.EmailCreateRequest_state>("state", State);
            writer.WriteStringValue("subcategory", Subcategory);
            writer.WriteStringValue("subject", Subject);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailSubscriptionDetails>("subscriptionDetails", SubscriptionDetails);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailTestingDetails>("testing", Testing);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicEmailToDetails>("to", To);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Marketing.MarketingEmailsV3.V3.Models.PublicWebversionDetails>("webversion", Webversion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
