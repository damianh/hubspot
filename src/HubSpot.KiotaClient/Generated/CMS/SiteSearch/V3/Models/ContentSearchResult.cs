// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models
{
    /// <summary>
    /// An individual search result.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ContentSearchResult : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Name of the author.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorFullName { get; set; }
#nullable restore
#else
        public string AuthorFullName { get; set; }
#endif
        /// <summary>For knowledge articles, the category of the article.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Category { get; set; }
#nullable restore
#else
        public string Category { get; set; }
#endif
        /// <summary>The ID of the document in HubSpot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CombinedId { get; set; }
#nullable restore
#else
        public string CombinedId { get; set; }
#endif
        /// <summary>The result&apos;s description. The content will be determined by the value of `length` in the request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The domain the document is hosted on.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Domain { get; set; }
#nullable restore
#else
        public string Domain { get; set; }
#endif
        /// <summary>URL of the featured image.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeaturedImageUrl { get; set; }
#nullable restore
#else
        public string FeaturedImageUrl { get; set; }
#endif
        /// <summary>The ID of the content.</summary>
        public int? Id { get; set; }
        /// <summary>The document&apos;s language.</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_language? Language { get; set; }
        /// <summary>The date the content was published.</summary>
        public long? PublishedDate { get; set; }
        /// <summary>If a dynamic page, the row ID in the HubDB table.</summary>
        public long? RowId { get; set; }
        /// <summary>The matching score of the document.</summary>
        public double? Score { get; set; }
        /// <summary>For knowledge articles, the subcategory of the article.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subcategory { get; set; }
#nullable restore
#else
        public string Subcategory { get; set; }
#endif
        /// <summary>If a dynamic page, the ID of the HubDB table.</summary>
        public long? TableId { get; set; }
        /// <summary>If a blog post, the tags associated with it.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>The title of the returned document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The type of document. Can be `SITE_PAGE`, `LANDING_PAGE`, `BLOG_POST`, `LISTING_PAGE`, or `KNOWLEDGE_ARTICLE`.</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_type? Type { get; set; }
        /// <summary>The url of the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult"/> and sets the default values.
        /// </summary>
        public ContentSearchResult()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authorFullName", n => { AuthorFullName = n.GetStringValue(); } },
                { "category", n => { Category = n.GetStringValue(); } },
                { "combinedId", n => { CombinedId = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "domain", n => { Domain = n.GetStringValue(); } },
                { "featuredImageUrl", n => { FeaturedImageUrl = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "language", n => { Language = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_language>(); } },
                { "publishedDate", n => { PublishedDate = n.GetLongValue(); } },
                { "rowId", n => { RowId = n.GetLongValue(); } },
                { "score", n => { Score = n.GetDoubleValue(); } },
                { "subcategory", n => { Subcategory = n.GetStringValue(); } },
                { "tableId", n => { TableId = n.GetLongValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_type>(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("authorFullName", AuthorFullName);
            writer.WriteStringValue("category", Category);
            writer.WriteStringValue("combinedId", CombinedId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("domain", Domain);
            writer.WriteStringValue("featuredImageUrl", FeaturedImageUrl);
            writer.WriteIntValue("id", Id);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_language>("language", Language);
            writer.WriteLongValue("publishedDate", PublishedDate);
            writer.WriteLongValue("rowId", RowId);
            writer.WriteDoubleValue("score", Score);
            writer.WriteStringValue("subcategory", Subcategory);
            writer.WriteLongValue("tableId", TableId);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteStringValue("title", Title);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.SiteSearch.V3.Models.ContentSearchResult_type>("type", Type);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
