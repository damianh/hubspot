// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models
{
    /// <summary>
    /// Model definition for a landing page or site page.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Page : IAdditionalDataHolder, IParsable
    {
        /// <summary>The status of the AB test associated with this page, if applicable</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_abStatus? AbStatus { get; set; }
        /// <summary>The ID of the AB test associated with this page, if applicable</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AbTestId { get; set; }
#nullable restore
#else
        public string AbTestId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The timestamp (ISO8601 format) when this page was deleted.</summary>
        public DateTimeOffset? ArchivedAt { get; set; }
        /// <summary>If True, the page will not show up in your dashboard, although the page could still be live.</summary>
        public bool? ArchivedInDashboard { get; set; }
        /// <summary>List of stylesheets to attach to this page. These stylesheets are attached to just this page. Order of precedence is bottom to top, just like in the HTML.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_attachedStylesheets>? AttachedStylesheets { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_attachedStylesheets> AttachedStylesheets { get; set; }
#endif
        /// <summary>The name of the user that updated this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorName { get; set; }
#nullable restore
#else
        public string AuthorName { get; set; }
#endif
        /// <summary>The GUID of the marketing campaign this page is a part of.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Campaign { get; set; }
#nullable restore
#else
        public string Campaign { get; set; }
#endif
        /// <summary>ID of the type of object this is. Should always .</summary>
        public int? CategoryId { get; set; }
        /// <summary>The contentGroupId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentGroupId { get; set; }
#nullable restore
#else
        public string ContentGroupId { get; set; }
#endif
        /// <summary>An ENUM descibing the type of this object. Should be either LANDING_PAGE or SITE_PAGE.</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_contentTypeCategory? ContentTypeCategory { get; set; }
        /// <summary>The created property</summary>
        public DateTimeOffset? Created { get; set; }
        /// <summary>The ID of the user that created this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedById { get; set; }
#nullable restore
#else
        public string CreatedById { get; set; }
#endif
        /// <summary>The currentlyPublished property</summary>
        public bool? CurrentlyPublished { get; set; }
        /// <summary>A generated ENUM descibing the current state of this page.</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_currentState? CurrentState { get; set; }
        /// <summary>The domain this page will resolve to. If null, the page will default to the primary domain for this content type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Domain { get; set; }
#nullable restore
#else
        public string Domain { get; set; }
#endif
        /// <summary>The dynamicPageDataSourceId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DynamicPageDataSourceId { get; set; }
#nullable restore
#else
        public string DynamicPageDataSourceId { get; set; }
#endif
        /// <summary>The dynamicPageDataSourceType property</summary>
        public int? DynamicPageDataSourceType { get; set; }
        /// <summary>The ID of the HubDB table this page references, if applicable</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DynamicPageHubDbTableId { get; set; }
#nullable restore
#else
        public string DynamicPageHubDbTableId { get; set; }
#endif
        /// <summary>Boolean to determine whether or not the styles from the template should be applied.</summary>
        public bool? EnableDomainStylesheets { get; set; }
        /// <summary>Boolean to determine whether or not the styles from the template should be applied.</summary>
        public bool? EnableLayoutStylesheets { get; set; }
        /// <summary>The featuredImage of this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeaturedImage { get; set; }
#nullable restore
#else
        public string FeaturedImage { get; set; }
#endif
        /// <summary>Alt Text of the featuredImage.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeaturedImageAltText { get; set; }
#nullable restore
#else
        public string FeaturedImageAltText { get; set; }
#endif
        /// <summary>The ID of the associated folder this landing page is organized under in the app dashboard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FolderId { get; set; }
#nullable restore
#else
        public string FolderId { get; set; }
#endif
        /// <summary>Custom HTML for embed codes, javascript that should be placed before the &lt;/body&gt; tag of the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FooterHtml { get; set; }
#nullable restore
#else
        public string FooterHtml { get; set; }
#endif
        /// <summary>Custom HTML for embed codes, javascript, etc. that goes in the &lt;head&gt; tag of the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HeadHtml { get; set; }
#nullable restore
#else
        public string HeadHtml { get; set; }
#endif
        /// <summary>The html title of this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HtmlTitle { get; set; }
#nullable restore
#else
        public string HtmlTitle { get; set; }
#endif
        /// <summary>The unique ID of the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Boolean to determine whether or not the Primary CSS Files should be applied.</summary>
        public bool? IncludeDefaultCustomCss { get; set; }
        /// <summary>The explicitly defined ISO 639 language code of the page. If null, the page will default to the language of the Domain.</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_language? Language { get; set; }
        /// <summary>The layoutSections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_layoutSections? LayoutSections { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_layoutSections LayoutSections { get; set; }
#endif
        /// <summary>Optional override to set the URL to be used in the rel=canonical link tag on the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LinkRelCanonicalUrl { get; set; }
#nullable restore
#else
        public string LinkRelCanonicalUrl { get; set; }
#endif
        /// <summary>The ID of the MAB test (or dynamic test) associated with this page, if applicable</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MabExperimentId { get; set; }
#nullable restore
#else
        public string MabExperimentId { get; set; }
#endif
        /// <summary>A description that goes in &lt;meta&gt; tag on the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MetaDescription { get; set; }
#nullable restore
#else
        public string MetaDescription { get; set; }
#endif
        /// <summary>The internal name of the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The date at which this page should expire and begin redirecting to another url or page.</summary>
        public long? PageExpiryDate { get; set; }
        /// <summary>Boolean describing if the page expiration feature is enabled for this page</summary>
        public bool? PageExpiryEnabled { get; set; }
        /// <summary>The ID of another page this page&apos;s url should redirect to once this page expires. Should only set this or pageExpiryRedirectUrl.</summary>
        public long? PageExpiryRedirectId { get; set; }
        /// <summary>The URL this page&apos;s url should redirect to once this page expires. Should only set this or pageExpiryRedirectId.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PageExpiryRedirectUrl { get; set; }
#nullable restore
#else
        public string PageExpiryRedirectUrl { get; set; }
#endif
        /// <summary>A generated Boolean describing whether or not this page is currently expired and being redirected.</summary>
        public bool? PageRedirected { get; set; }
        /// <summary>Set this to create a password protected page. Entering the password will be required to view the page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Password { get; set; }
#nullable restore
#else
        public string Password { get; set; }
#endif
        /// <summary>Rules for require member registration to access private content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.PublicAccessRule>? PublicAccessRules { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.PublicAccessRule> PublicAccessRules { get; set; }
#endif
        /// <summary>Boolean to determine whether or not to respect publicAccessRules.</summary>
        public bool? PublicAccessRulesEnabled { get; set; }
        /// <summary>The date (ISO8601 format) the page is to be published at.</summary>
        public DateTimeOffset? PublishDate { get; set; }
        /// <summary>Set this to true if you want to be published immediately when the schedule publish endpoint is called, and to ignore the publish_date setting.</summary>
        public bool? PublishImmediately { get; set; }
        /// <summary>The path of the this page. This field is appended to the domain to construct the url of this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>An ENUM descibing the current state of this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>Details the type of page this is. Should always be landing_page or site_page</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subcategory { get; set; }
#nullable restore
#else
        public string Subcategory { get; set; }
#endif
        /// <summary>String detailing the path of the template used for this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TemplatePath { get; set; }
#nullable restore
#else
        public string TemplatePath { get; set; }
#endif
        /// <summary>The themeSettingsValues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_themeSettingsValues? ThemeSettingsValues { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_themeSettingsValues ThemeSettingsValues { get; set; }
#endif
        /// <summary>ID of the primary page this object was translated from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranslatedFromId { get; set; }
#nullable restore
#else
        public string TranslatedFromId { get; set; }
#endif
        /// <summary>The translations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_translations? Translations { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_translations Translations { get; set; }
#endif
        /// <summary>The updated property</summary>
        public DateTimeOffset? Updated { get; set; }
        /// <summary>The ID of the user that updated this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedById { get; set; }
#nullable restore
#else
        public string UpdatedById { get; set; }
#endif
        /// <summary>A generated field representing the URL of this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>Boolean to determine if this page should use a featuredImage.</summary>
        public bool? UseFeaturedImage { get; set; }
        /// <summary>A data structure containing the data for all the modules inside the containers for this page. This will only be populated if the page has widget containers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgetContainers? WidgetContainers { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgetContainers WidgetContainers { get; set; }
#endif
        /// <summary>A data structure containing the data for all the modules for this page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgets? Widgets { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgets Widgets { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page"/> and sets the default values.
        /// </summary>
        public Page()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "abStatus", n => { AbStatus = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_abStatus>(); } },
                { "abTestId", n => { AbTestId = n.GetStringValue(); } },
                { "archivedAt", n => { ArchivedAt = n.GetDateTimeOffsetValue(); } },
                { "archivedInDashboard", n => { ArchivedInDashboard = n.GetBoolValue(); } },
                { "attachedStylesheets", n => { AttachedStylesheets = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_attachedStylesheets>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_attachedStylesheets.CreateFromDiscriminatorValue)?.AsList(); } },
                { "authorName", n => { AuthorName = n.GetStringValue(); } },
                { "campaign", n => { Campaign = n.GetStringValue(); } },
                { "categoryId", n => { CategoryId = n.GetIntValue(); } },
                { "contentGroupId", n => { ContentGroupId = n.GetStringValue(); } },
                { "contentTypeCategory", n => { ContentTypeCategory = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_contentTypeCategory>(); } },
                { "created", n => { Created = n.GetDateTimeOffsetValue(); } },
                { "createdById", n => { CreatedById = n.GetStringValue(); } },
                { "currentState", n => { CurrentState = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_currentState>(); } },
                { "currentlyPublished", n => { CurrentlyPublished = n.GetBoolValue(); } },
                { "domain", n => { Domain = n.GetStringValue(); } },
                { "dynamicPageDataSourceId", n => { DynamicPageDataSourceId = n.GetStringValue(); } },
                { "dynamicPageDataSourceType", n => { DynamicPageDataSourceType = n.GetIntValue(); } },
                { "dynamicPageHubDbTableId", n => { DynamicPageHubDbTableId = n.GetStringValue(); } },
                { "enableDomainStylesheets", n => { EnableDomainStylesheets = n.GetBoolValue(); } },
                { "enableLayoutStylesheets", n => { EnableLayoutStylesheets = n.GetBoolValue(); } },
                { "featuredImage", n => { FeaturedImage = n.GetStringValue(); } },
                { "featuredImageAltText", n => { FeaturedImageAltText = n.GetStringValue(); } },
                { "folderId", n => { FolderId = n.GetStringValue(); } },
                { "footerHtml", n => { FooterHtml = n.GetStringValue(); } },
                { "headHtml", n => { HeadHtml = n.GetStringValue(); } },
                { "htmlTitle", n => { HtmlTitle = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "includeDefaultCustomCss", n => { IncludeDefaultCustomCss = n.GetBoolValue(); } },
                { "language", n => { Language = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_language>(); } },
                { "layoutSections", n => { LayoutSections = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_layoutSections>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_layoutSections.CreateFromDiscriminatorValue); } },
                { "linkRelCanonicalUrl", n => { LinkRelCanonicalUrl = n.GetStringValue(); } },
                { "mabExperimentId", n => { MabExperimentId = n.GetStringValue(); } },
                { "metaDescription", n => { MetaDescription = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "pageExpiryDate", n => { PageExpiryDate = n.GetLongValue(); } },
                { "pageExpiryEnabled", n => { PageExpiryEnabled = n.GetBoolValue(); } },
                { "pageExpiryRedirectId", n => { PageExpiryRedirectId = n.GetLongValue(); } },
                { "pageExpiryRedirectUrl", n => { PageExpiryRedirectUrl = n.GetStringValue(); } },
                { "pageRedirected", n => { PageRedirected = n.GetBoolValue(); } },
                { "password", n => { Password = n.GetStringValue(); } },
                { "publicAccessRules", n => { PublicAccessRules = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.PublicAccessRule>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.PublicAccessRule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "publicAccessRulesEnabled", n => { PublicAccessRulesEnabled = n.GetBoolValue(); } },
                { "publishDate", n => { PublishDate = n.GetDateTimeOffsetValue(); } },
                { "publishImmediately", n => { PublishImmediately = n.GetBoolValue(); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "subcategory", n => { Subcategory = n.GetStringValue(); } },
                { "templatePath", n => { TemplatePath = n.GetStringValue(); } },
                { "themeSettingsValues", n => { ThemeSettingsValues = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_themeSettingsValues>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_themeSettingsValues.CreateFromDiscriminatorValue); } },
                { "translatedFromId", n => { TranslatedFromId = n.GetStringValue(); } },
                { "translations", n => { Translations = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_translations>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_translations.CreateFromDiscriminatorValue); } },
                { "updated", n => { Updated = n.GetDateTimeOffsetValue(); } },
                { "updatedById", n => { UpdatedById = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "useFeaturedImage", n => { UseFeaturedImage = n.GetBoolValue(); } },
                { "widgetContainers", n => { WidgetContainers = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgetContainers>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgetContainers.CreateFromDiscriminatorValue); } },
                { "widgets", n => { Widgets = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgets>(global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgets.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_abStatus>("abStatus", AbStatus);
            writer.WriteStringValue("abTestId", AbTestId);
            writer.WriteDateTimeOffsetValue("archivedAt", ArchivedAt);
            writer.WriteBoolValue("archivedInDashboard", ArchivedInDashboard);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_attachedStylesheets>("attachedStylesheets", AttachedStylesheets);
            writer.WriteStringValue("authorName", AuthorName);
            writer.WriteStringValue("campaign", Campaign);
            writer.WriteIntValue("categoryId", CategoryId);
            writer.WriteStringValue("contentGroupId", ContentGroupId);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_contentTypeCategory>("contentTypeCategory", ContentTypeCategory);
            writer.WriteDateTimeOffsetValue("created", Created);
            writer.WriteStringValue("createdById", CreatedById);
            writer.WriteBoolValue("currentlyPublished", CurrentlyPublished);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_currentState>("currentState", CurrentState);
            writer.WriteStringValue("domain", Domain);
            writer.WriteStringValue("dynamicPageDataSourceId", DynamicPageDataSourceId);
            writer.WriteIntValue("dynamicPageDataSourceType", DynamicPageDataSourceType);
            writer.WriteStringValue("dynamicPageHubDbTableId", DynamicPageHubDbTableId);
            writer.WriteBoolValue("enableDomainStylesheets", EnableDomainStylesheets);
            writer.WriteBoolValue("enableLayoutStylesheets", EnableLayoutStylesheets);
            writer.WriteStringValue("featuredImage", FeaturedImage);
            writer.WriteStringValue("featuredImageAltText", FeaturedImageAltText);
            writer.WriteStringValue("folderId", FolderId);
            writer.WriteStringValue("footerHtml", FooterHtml);
            writer.WriteStringValue("headHtml", HeadHtml);
            writer.WriteStringValue("htmlTitle", HtmlTitle);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("includeDefaultCustomCss", IncludeDefaultCustomCss);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_language>("language", Language);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_layoutSections>("layoutSections", LayoutSections);
            writer.WriteStringValue("linkRelCanonicalUrl", LinkRelCanonicalUrl);
            writer.WriteStringValue("mabExperimentId", MabExperimentId);
            writer.WriteStringValue("metaDescription", MetaDescription);
            writer.WriteStringValue("name", Name);
            writer.WriteLongValue("pageExpiryDate", PageExpiryDate);
            writer.WriteBoolValue("pageExpiryEnabled", PageExpiryEnabled);
            writer.WriteLongValue("pageExpiryRedirectId", PageExpiryRedirectId);
            writer.WriteStringValue("pageExpiryRedirectUrl", PageExpiryRedirectUrl);
            writer.WriteBoolValue("pageRedirected", PageRedirected);
            writer.WriteStringValue("password", Password);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.PublicAccessRule>("publicAccessRules", PublicAccessRules);
            writer.WriteBoolValue("publicAccessRulesEnabled", PublicAccessRulesEnabled);
            writer.WriteDateTimeOffsetValue("publishDate", PublishDate);
            writer.WriteBoolValue("publishImmediately", PublishImmediately);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("subcategory", Subcategory);
            writer.WriteStringValue("templatePath", TemplatePath);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_themeSettingsValues>("themeSettingsValues", ThemeSettingsValues);
            writer.WriteStringValue("translatedFromId", TranslatedFromId);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_translations>("translations", Translations);
            writer.WriteDateTimeOffsetValue("updated", Updated);
            writer.WriteStringValue("updatedById", UpdatedById);
            writer.WriteStringValue("url", Url);
            writer.WriteBoolValue("useFeaturedImage", UseFeaturedImage);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgetContainers>("widgetContainers", WidgetContainers);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.Pages.V3.Models.Page_widgets>("widgets", Widgets);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
