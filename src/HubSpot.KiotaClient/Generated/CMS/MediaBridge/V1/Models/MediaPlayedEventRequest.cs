// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MediaPlayedEventRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The contactId property</summary>
        public long? ContactId { get; set; }
        /// <summary>The contactUtk property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactUtk { get; set; }
#nullable restore
#else
        public string ContactUtk { get; set; }
#endif
        /// <summary>The externalId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalId { get; set; }
#nullable restore
#else
        public string ExternalId { get; set; }
#endif
        /// <summary>The _hsenc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Hsenc { get; set; }
#nullable restore
#else
        public string Hsenc { get; set; }
#endif
        /// <summary>The iframeUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IframeUrl { get; set; }
#nullable restore
#else
        public string IframeUrl { get; set; }
#endif
        /// <summary>The mediaBridgeId property</summary>
        public long? MediaBridgeId { get; set; }
        /// <summary>The mediaName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaName { get; set; }
#nullable restore
#else
        public string MediaName { get; set; }
#endif
        /// <summary>The mediaType property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_mediaType? MediaType { get; set; }
        /// <summary>The mediaUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaUrl { get; set; }
#nullable restore
#else
        public string MediaUrl { get; set; }
#endif
        /// <summary>The occurredTimestamp property</summary>
        public long? OccurredTimestamp { get; set; }
        /// <summary>The pageId property</summary>
        public long? PageId { get; set; }
        /// <summary>The pageName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PageName { get; set; }
#nullable restore
#else
        public string PageName { get; set; }
#endif
        /// <summary>The pageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PageUrl { get; set; }
#nullable restore
#else
        public string PageUrl { get; set; }
#endif
        /// <summary>The sessionId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SessionId { get; set; }
#nullable restore
#else
        public string SessionId { get; set; }
#endif
        /// <summary>The state property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_state? State { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest"/> and sets the default values.
        /// </summary>
        public MediaPlayedEventRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contactId", n => { ContactId = n.GetLongValue(); } },
                { "contactUtk", n => { ContactUtk = n.GetStringValue(); } },
                { "externalId", n => { ExternalId = n.GetStringValue(); } },
                { "_hsenc", n => { Hsenc = n.GetStringValue(); } },
                { "iframeUrl", n => { IframeUrl = n.GetStringValue(); } },
                { "mediaBridgeId", n => { MediaBridgeId = n.GetLongValue(); } },
                { "mediaName", n => { MediaName = n.GetStringValue(); } },
                { "mediaType", n => { MediaType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_mediaType>(); } },
                { "mediaUrl", n => { MediaUrl = n.GetStringValue(); } },
                { "occurredTimestamp", n => { OccurredTimestamp = n.GetLongValue(); } },
                { "pageId", n => { PageId = n.GetLongValue(); } },
                { "pageName", n => { PageName = n.GetStringValue(); } },
                { "pageUrl", n => { PageUrl = n.GetStringValue(); } },
                { "sessionId", n => { SessionId = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_state>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("contactId", ContactId);
            writer.WriteStringValue("contactUtk", ContactUtk);
            writer.WriteStringValue("externalId", ExternalId);
            writer.WriteStringValue("_hsenc", Hsenc);
            writer.WriteStringValue("iframeUrl", IframeUrl);
            writer.WriteLongValue("mediaBridgeId", MediaBridgeId);
            writer.WriteStringValue("mediaName", MediaName);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_mediaType>("mediaType", MediaType);
            writer.WriteStringValue("mediaUrl", MediaUrl);
            writer.WriteLongValue("occurredTimestamp", OccurredTimestamp);
            writer.WriteLongValue("pageId", PageId);
            writer.WriteStringValue("pageName", PageName);
            writer.WriteStringValue("pageUrl", PageUrl);
            writer.WriteStringValue("sessionId", SessionId);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MediaPlayedEventRequest_state>("state", State);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
