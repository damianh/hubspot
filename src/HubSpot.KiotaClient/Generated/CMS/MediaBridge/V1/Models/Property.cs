// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Property : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The allowedObjectTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ObjectTypeIdProto>? AllowedObjectTypes { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ObjectTypeIdProto> AllowedObjectTypes { get; set; }
#endif
        /// <summary>The calculated property</summary>
        public bool? Calculated { get; set; }
        /// <summary>The createdAt property</summary>
        public long? CreatedAt { get; set; }
        /// <summary>The createdUserId property</summary>
        public long? CreatedUserId { get; set; }
        /// <summary>The currencyPropertyName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyPropertyName { get; set; }
#nullable restore
#else
        public string CurrencyPropertyName { get; set; }
#endif
        /// <summary>The deleted property</summary>
        public bool? Deleted { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The displayMode property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_displayMode? DisplayMode { get; set; }
        /// <summary>The displayOrder property</summary>
        public int? DisplayOrder { get; set; }
        /// <summary>The externalOptions property</summary>
        public bool? ExternalOptions { get; set; }
        /// <summary>The externalOptionsReferenceType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalOptionsReferenceType { get; set; }
#nullable restore
#else
        public string ExternalOptionsReferenceType { get; set; }
#endif
        /// <summary>The favorited property</summary>
        public bool? Favorited { get; set; }
        /// <summary>The favoritedOrder property</summary>
        public int? FavoritedOrder { get; set; }
        /// <summary>The fieldType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldType { get; set; }
#nullable restore
#else
        public string FieldType { get; set; }
#endif
        /// <summary>The formField property</summary>
        public bool? FormField { get; set; }
        /// <summary>The fromUserId property</summary>
        public long? FromUserId { get; set; }
        /// <summary>The groupName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupName { get; set; }
#nullable restore
#else
        public string GroupName { get; set; }
#endif
        /// <summary>The hasUniqueValue property</summary>
        public bool? HasUniqueValue { get; set; }
        /// <summary>The hidden property</summary>
        public bool? Hidden { get; set; }
        /// <summary>The hubspotDefined property</summary>
        public bool? HubspotDefined { get; set; }
        /// <summary>The isCustomizedDefault property</summary>
        public bool? IsCustomizedDefault { get; set; }
        /// <summary>The isMultiValued property</summary>
        public bool? IsMultiValued { get; set; }
        /// <summary>The isPartial property</summary>
        public bool? IsPartial { get; set; }
        /// <summary>The label property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>The mutableDefinitionNotDeletable property</summary>
        public bool? MutableDefinitionNotDeletable { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The numberDisplayHint property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_numberDisplayHint? NumberDisplayHint { get; set; }
        /// <summary>The options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Option>? Options { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Option> Options { get; set; }
#endif
        /// <summary>The optionsAreMutable property</summary>
        public bool? OptionsAreMutable { get; set; }
        /// <summary>The optionSortStrategy property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_optionSortStrategy? OptionSortStrategy { get; set; }
        /// <summary>The portalId property</summary>
        public long? PortalId { get; set; }
        /// <summary>The readOnlyDefinition property</summary>
        public bool? ReadOnlyDefinition { get; set; }
        /// <summary>The readOnlyValue property</summary>
        public bool? ReadOnlyValue { get; set; }
        /// <summary>The referencedObjectType property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_referencedObjectType? ReferencedObjectType { get; set; }
        /// <summary>The searchableInGlobalSearch property</summary>
        public bool? SearchableInGlobalSearch { get; set; }
        /// <summary>The searchTextAnalysisMode property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_searchTextAnalysisMode? SearchTextAnalysisMode { get; set; }
        /// <summary>The showCurrencySymbol property</summary>
        public bool? ShowCurrencySymbol { get; set; }
        /// <summary>The textDisplayHint property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_textDisplayHint? TextDisplayHint { get; set; }
        /// <summary>The type property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_type? Type { get; set; }
        /// <summary>The updatedAt property</summary>
        public long? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property"/> and sets the default values.
        /// </summary>
        public Property()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowedObjectTypes", n => { AllowedObjectTypes = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ObjectTypeIdProto>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ObjectTypeIdProto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "calculated", n => { Calculated = n.GetBoolValue(); } },
                { "createdAt", n => { CreatedAt = n.GetLongValue(); } },
                { "createdUserId", n => { CreatedUserId = n.GetLongValue(); } },
                { "currencyPropertyName", n => { CurrencyPropertyName = n.GetStringValue(); } },
                { "deleted", n => { Deleted = n.GetBoolValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayMode", n => { DisplayMode = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_displayMode>(); } },
                { "displayOrder", n => { DisplayOrder = n.GetIntValue(); } },
                { "externalOptions", n => { ExternalOptions = n.GetBoolValue(); } },
                { "externalOptionsReferenceType", n => { ExternalOptionsReferenceType = n.GetStringValue(); } },
                { "favorited", n => { Favorited = n.GetBoolValue(); } },
                { "favoritedOrder", n => { FavoritedOrder = n.GetIntValue(); } },
                { "fieldType", n => { FieldType = n.GetStringValue(); } },
                { "formField", n => { FormField = n.GetBoolValue(); } },
                { "fromUserId", n => { FromUserId = n.GetLongValue(); } },
                { "groupName", n => { GroupName = n.GetStringValue(); } },
                { "hasUniqueValue", n => { HasUniqueValue = n.GetBoolValue(); } },
                { "hidden", n => { Hidden = n.GetBoolValue(); } },
                { "hubspotDefined", n => { HubspotDefined = n.GetBoolValue(); } },
                { "isCustomizedDefault", n => { IsCustomizedDefault = n.GetBoolValue(); } },
                { "isMultiValued", n => { IsMultiValued = n.GetBoolValue(); } },
                { "isPartial", n => { IsPartial = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "mutableDefinitionNotDeletable", n => { MutableDefinitionNotDeletable = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "numberDisplayHint", n => { NumberDisplayHint = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_numberDisplayHint>(); } },
                { "optionSortStrategy", n => { OptionSortStrategy = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_optionSortStrategy>(); } },
                { "options", n => { Options = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Option>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Option.CreateFromDiscriminatorValue)?.AsList(); } },
                { "optionsAreMutable", n => { OptionsAreMutable = n.GetBoolValue(); } },
                { "portalId", n => { PortalId = n.GetLongValue(); } },
                { "readOnlyDefinition", n => { ReadOnlyDefinition = n.GetBoolValue(); } },
                { "readOnlyValue", n => { ReadOnlyValue = n.GetBoolValue(); } },
                { "referencedObjectType", n => { ReferencedObjectType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_referencedObjectType>(); } },
                { "searchTextAnalysisMode", n => { SearchTextAnalysisMode = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_searchTextAnalysisMode>(); } },
                { "searchableInGlobalSearch", n => { SearchableInGlobalSearch = n.GetBoolValue(); } },
                { "showCurrencySymbol", n => { ShowCurrencySymbol = n.GetBoolValue(); } },
                { "textDisplayHint", n => { TextDisplayHint = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_textDisplayHint>(); } },
                { "type", n => { Type = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_type>(); } },
                { "updatedAt", n => { UpdatedAt = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ObjectTypeIdProto>("allowedObjectTypes", AllowedObjectTypes);
            writer.WriteBoolValue("calculated", Calculated);
            writer.WriteLongValue("createdAt", CreatedAt);
            writer.WriteLongValue("createdUserId", CreatedUserId);
            writer.WriteStringValue("currencyPropertyName", CurrencyPropertyName);
            writer.WriteBoolValue("deleted", Deleted);
            writer.WriteStringValue("description", Description);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_displayMode>("displayMode", DisplayMode);
            writer.WriteIntValue("displayOrder", DisplayOrder);
            writer.WriteBoolValue("externalOptions", ExternalOptions);
            writer.WriteStringValue("externalOptionsReferenceType", ExternalOptionsReferenceType);
            writer.WriteBoolValue("favorited", Favorited);
            writer.WriteIntValue("favoritedOrder", FavoritedOrder);
            writer.WriteStringValue("fieldType", FieldType);
            writer.WriteBoolValue("formField", FormField);
            writer.WriteLongValue("fromUserId", FromUserId);
            writer.WriteStringValue("groupName", GroupName);
            writer.WriteBoolValue("hasUniqueValue", HasUniqueValue);
            writer.WriteBoolValue("hidden", Hidden);
            writer.WriteBoolValue("hubspotDefined", HubspotDefined);
            writer.WriteBoolValue("isCustomizedDefault", IsCustomizedDefault);
            writer.WriteBoolValue("isMultiValued", IsMultiValued);
            writer.WriteBoolValue("isPartial", IsPartial);
            writer.WriteStringValue("label", Label);
            writer.WriteBoolValue("mutableDefinitionNotDeletable", MutableDefinitionNotDeletable);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_numberDisplayHint>("numberDisplayHint", NumberDisplayHint);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Option>("options", Options);
            writer.WriteBoolValue("optionsAreMutable", OptionsAreMutable);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_optionSortStrategy>("optionSortStrategy", OptionSortStrategy);
            writer.WriteLongValue("portalId", PortalId);
            writer.WriteBoolValue("readOnlyDefinition", ReadOnlyDefinition);
            writer.WriteBoolValue("readOnlyValue", ReadOnlyValue);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_referencedObjectType>("referencedObjectType", ReferencedObjectType);
            writer.WriteBoolValue("searchableInGlobalSearch", SearchableInGlobalSearch);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_searchTextAnalysisMode>("searchTextAnalysisMode", SearchTextAnalysisMode);
            writer.WriteBoolValue("showCurrencySymbol", ShowCurrencySymbol);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_textDisplayHint>("textDisplayHint", TextDisplayHint);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Property_type>("type", Type);
            writer.WriteLongValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
