// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExtensionData : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The caseChangeTestExtensionData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.CaseChangeTestExtensionData? CaseChangeTestExtensionData { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.CaseChangeTestExtensionData CaseChangeTestExtensionData { get; set; }
#endif
        /// <summary>The extensionStatusMap property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData_extensionStatusMap? ExtensionStatusMap { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData_extensionStatusMap ExtensionStatusMap { get; set; }
#endif
        /// <summary>The optionDecoratorsExtensionData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.OptionDecoratorsExtensionData? OptionDecoratorsExtensionData { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.OptionDecoratorsExtensionData OptionDecoratorsExtensionData { get; set; }
#endif
        /// <summary>The requiredPropertiesExtensionData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RequiredPropertiesExtensionData? RequiredPropertiesExtensionData { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RequiredPropertiesExtensionData RequiredPropertiesExtensionData { get; set; }
#endif
        /// <summary>The softRequiredPropertiesExtensionData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SoftRequiredPropertiesExtensionData? SoftRequiredPropertiesExtensionData { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SoftRequiredPropertiesExtensionData SoftRequiredPropertiesExtensionData { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData"/> and sets the default values.
        /// </summary>
        public ExtensionData()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "caseChangeTestExtensionData", n => { CaseChangeTestExtensionData = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.CaseChangeTestExtensionData>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.CaseChangeTestExtensionData.CreateFromDiscriminatorValue); } },
                { "extensionStatusMap", n => { ExtensionStatusMap = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData_extensionStatusMap>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData_extensionStatusMap.CreateFromDiscriminatorValue); } },
                { "optionDecoratorsExtensionData", n => { OptionDecoratorsExtensionData = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.OptionDecoratorsExtensionData>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.OptionDecoratorsExtensionData.CreateFromDiscriminatorValue); } },
                { "requiredPropertiesExtensionData", n => { RequiredPropertiesExtensionData = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RequiredPropertiesExtensionData>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RequiredPropertiesExtensionData.CreateFromDiscriminatorValue); } },
                { "softRequiredPropertiesExtensionData", n => { SoftRequiredPropertiesExtensionData = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SoftRequiredPropertiesExtensionData>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SoftRequiredPropertiesExtensionData.CreateFromDiscriminatorValue); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.CaseChangeTestExtensionData>("caseChangeTestExtensionData", CaseChangeTestExtensionData);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtensionData_extensionStatusMap>("extensionStatusMap", ExtensionStatusMap);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.OptionDecoratorsExtensionData>("optionDecoratorsExtensionData", OptionDecoratorsExtensionData);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RequiredPropertiesExtensionData>("requiredPropertiesExtensionData", RequiredPropertiesExtensionData);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SoftRequiredPropertiesExtensionData>("softRequiredPropertiesExtensionData", SoftRequiredPropertiesExtensionData);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
