// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Month : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The inputs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs>? Inputs { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs> Inputs { get; set; }
#endif
        /// <summary>The operator property</summary>
        public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month_operator? Operator { get; set; }
        /// <summary>The propertyName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PropertyName { get; set; }
#nullable restore
#else
        public string PropertyName { get; set; }
#endif
        /// <summary>The value property</summary>
        public double? Value { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month"/> and sets the default values.
        /// </summary>
        public Month()
        {
            AdditionalData = new Dictionary<string, object>();
            Operator = global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month_operator.MONTH;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "inputs", n => { Inputs = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs>(global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs.CreateFromDiscriminatorValue)?.AsList(); } },
                { "operator", n => { Operator = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month_operator>(); } },
                { "propertyName", n => { PropertyName = n.GetStringValue(); } },
                { "value", n => { Value = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs>("inputs", Inputs);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month_operator>("operator", Operator);
            writer.WriteStringValue("propertyName", PropertyName);
            writer.WriteDoubleValue("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Month_inputs : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue? AbsoluteValue { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue AbsoluteValue { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers? AddNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers AddNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime? AddTime { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime AddTime { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And? And { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And And { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith? BeginsWith { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith BeginsWith { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable? BooleanPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable BooleanPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable? BooleanTargetPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable BooleanTargetPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings? ConcatStrings { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings ConcatStrings { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean? ConstantBoolean { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean ConstantBoolean { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber? ConstantNumber { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber ConstantNumber { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString? ConstantString { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString ConstantString { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains? Contains { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains Contains { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject? Date { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject Date { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate? DatedExchangeRate { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate DatedExchangeRate { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers? DivideNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers DivideNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler? Euler { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler Euler { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml? ExtractMostRecentEmailReplyHtml { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml ExtractMostRecentEmailReplyHtml { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText? ExtractMostRecentEmailReplyText { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText ExtractMostRecentEmailReplyText { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply? ExtractMostRecentPlainTextEmailReply { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply ExtractMostRecentPlainTextEmailReply { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces? FetchCurrencyDecimalPlaces { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces FetchCurrencyDecimalPlaces { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate? FetchExchangeRate { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate FetchExchangeRate { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency? FetchSingleCurrencyPortalCurrency { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency FetchSingleCurrencyPortalCurrency { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName? FormatFullName { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName FormatFullName { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply? HasEmailReply { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply HasEmailReply { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply? HasPlainTextEmailReply { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply HasPlainTextEmailReply { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean? IfBoolean { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean IfBoolean { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber? IfNumber { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber IfNumber { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString? IfString { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString IfString { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType? IsEngagementType { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType IsEngagementType { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed? IsPipelineStageClosed { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed IsPipelineStageClosed { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent? IsPresent { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent IsPresent { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan? LessThan { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan LessThan { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual? LessThanOrEqual { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual LessThanOrEqual { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase? LowerCase { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase LowerCase { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers? MaxNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers MaxNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers? MinNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers MinNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month? Month { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month Month { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan? MoreThan { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan MoreThan { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual? MoreThanOrEqual { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual MoreThanOrEqual { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers? MultiplyNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers MultiplyNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not? Not { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not Not { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now? Now { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now Now { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals? NumberEquals { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals NumberEquals { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable? NumberPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable NumberPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable? NumberTargetPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable NumberTargetPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString? NumberToString { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString NumberToString { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or? Or { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or Or { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber? ParseNumber { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber ParseNumber { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths? PeriodToMonths { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths PeriodToMonths { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks? PeriodToWeeks { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks PeriodToWeeks { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability? PipelineProbability { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability PipelineProbability { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power? Power { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power Power { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers? RoundDownNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers RoundDownNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers? RoundNearestNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers RoundNearestNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers? RoundUpNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers RoundUpNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString? SetContainsString { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString SetContainsString { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot? SquareRoot { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot SquareRoot { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals? StringEquals { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals StringEquals { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength? StringLength { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength StringLength { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable? StringPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable StringPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable? StringTargetPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable StringTargetPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring? Substring { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring Substring { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers? SubtractNumbers { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers SubtractNumbers { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime? SubtractTime { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime SubtractTime { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween? TimeBetween { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween TimeBetween { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable? TimestampOfPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable TimestampOfPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable? TimestampOfTargetPropertyVariable { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable TimestampOfTargetPropertyVariable { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase? UpperCase { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase UpperCase { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor? Xor { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor Xor { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year? Year { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year Year { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month.Month_inputs();
                if("AbsoluteValue".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AbsoluteValue = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue();
                }
                else if("AddNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AddNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers();
                }
                else if("AddTime".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AddTime = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime();
                }
                else if("And".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.And = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And();
                }
                else if("BeginsWith".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BeginsWith = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith();
                }
                else if("BooleanPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BooleanPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable();
                }
                else if("BooleanTargetPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BooleanTargetPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable();
                }
                else if("ConcatStrings".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ConcatStrings = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings();
                }
                else if("ConstantBoolean".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ConstantBoolean = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean();
                }
                else if("ConstantNumber".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ConstantNumber = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber();
                }
                else if("ConstantString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ConstantString = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString();
                }
                else if("Contains".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Contains = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains();
                }
                else if("Date".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Date = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject();
                }
                else if("DatedExchangeRate".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.DatedExchangeRate = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate();
                }
                else if("DivideNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.DivideNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers();
                }
                else if("Euler".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Euler = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler();
                }
                else if("ExtractMostRecentEmailReplyHtml".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ExtractMostRecentEmailReplyHtml = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml();
                }
                else if("ExtractMostRecentEmailReplyText".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ExtractMostRecentEmailReplyText = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText();
                }
                else if("ExtractMostRecentPlainTextEmailReply".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ExtractMostRecentPlainTextEmailReply = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply();
                }
                else if("FetchCurrencyDecimalPlaces".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FetchCurrencyDecimalPlaces = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces();
                }
                else if("FetchExchangeRate".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FetchExchangeRate = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate();
                }
                else if("FetchSingleCurrencyPortalCurrency".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FetchSingleCurrencyPortalCurrency = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency();
                }
                else if("FormatFullName".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FormatFullName = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName();
                }
                else if("HasEmailReply".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.HasEmailReply = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply();
                }
                else if("HasPlainTextEmailReply".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.HasPlainTextEmailReply = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply();
                }
                else if("IfBoolean".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IfBoolean = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean();
                }
                else if("IfNumber".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IfNumber = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber();
                }
                else if("IfString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IfString = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString();
                }
                else if("IsEngagementType".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IsEngagementType = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType();
                }
                else if("IsPipelineStageClosed".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IsPipelineStageClosed = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed();
                }
                else if("IsPresent".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.IsPresent = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent();
                }
                else if("LessThan".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LessThan = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan();
                }
                else if("LessThanOrEqual".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LessThanOrEqual = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual();
                }
                else if("LowerCase".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LowerCase = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase();
                }
                else if("MaxNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MaxNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers();
                }
                else if("MinNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MinNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers();
                }
                else if("Month".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Month = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month();
                }
                else if("MoreThan".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MoreThan = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan();
                }
                else if("MoreThanOrEqual".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MoreThanOrEqual = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual();
                }
                else if("MultiplyNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MultiplyNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers();
                }
                else if("Not".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Not = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not();
                }
                else if("Now".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Now = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now();
                }
                else if("NumberEquals".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumberEquals = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals();
                }
                else if("NumberPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumberPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable();
                }
                else if("NumberTargetPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumberTargetPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable();
                }
                else if("NumberToString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumberToString = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString();
                }
                else if("Or".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Or = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or();
                }
                else if("ParseNumber".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ParseNumber = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber();
                }
                else if("PeriodToMonths".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PeriodToMonths = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths();
                }
                else if("PeriodToWeeks".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PeriodToWeeks = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks();
                }
                else if("PipelineProbability".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PipelineProbability = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability();
                }
                else if("Power".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Power = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power();
                }
                else if("RoundDownNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RoundDownNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers();
                }
                else if("RoundNearestNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RoundNearestNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers();
                }
                else if("RoundUpNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RoundUpNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers();
                }
                else if("SetContainsString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SetContainsString = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString();
                }
                else if("SquareRoot".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SquareRoot = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot();
                }
                else if("StringEquals".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringEquals = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals();
                }
                else if("StringLength".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringLength = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength();
                }
                else if("StringPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable();
                }
                else if("StringTargetPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringTargetPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable();
                }
                else if("Substring".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Substring = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring();
                }
                else if("SubtractNumbers".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SubtractNumbers = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers();
                }
                else if("SubtractTime".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SubtractTime = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime();
                }
                else if("TimeBetween".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TimeBetween = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween();
                }
                else if("TimestampOfPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TimestampOfPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable();
                }
                else if("TimestampOfTargetPropertyVariable".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TimestampOfTargetPropertyVariable = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable();
                }
                else if("UpperCase".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.UpperCase = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase();
                }
                else if("Xor".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Xor = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor();
                }
                else if("Year".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Year = new global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AbsoluteValue != null)
                {
                    return AbsoluteValue.GetFieldDeserializers();
                }
                else if(AddNumbers != null)
                {
                    return AddNumbers.GetFieldDeserializers();
                }
                else if(AddTime != null)
                {
                    return AddTime.GetFieldDeserializers();
                }
                else if(And != null)
                {
                    return And.GetFieldDeserializers();
                }
                else if(BeginsWith != null)
                {
                    return BeginsWith.GetFieldDeserializers();
                }
                else if(BooleanPropertyVariable != null)
                {
                    return BooleanPropertyVariable.GetFieldDeserializers();
                }
                else if(BooleanTargetPropertyVariable != null)
                {
                    return BooleanTargetPropertyVariable.GetFieldDeserializers();
                }
                else if(ConcatStrings != null)
                {
                    return ConcatStrings.GetFieldDeserializers();
                }
                else if(ConstantBoolean != null)
                {
                    return ConstantBoolean.GetFieldDeserializers();
                }
                else if(ConstantNumber != null)
                {
                    return ConstantNumber.GetFieldDeserializers();
                }
                else if(ConstantString != null)
                {
                    return ConstantString.GetFieldDeserializers();
                }
                else if(Contains != null)
                {
                    return Contains.GetFieldDeserializers();
                }
                else if(Date != null)
                {
                    return Date.GetFieldDeserializers();
                }
                else if(DatedExchangeRate != null)
                {
                    return DatedExchangeRate.GetFieldDeserializers();
                }
                else if(DivideNumbers != null)
                {
                    return DivideNumbers.GetFieldDeserializers();
                }
                else if(Euler != null)
                {
                    return Euler.GetFieldDeserializers();
                }
                else if(ExtractMostRecentEmailReplyHtml != null)
                {
                    return ExtractMostRecentEmailReplyHtml.GetFieldDeserializers();
                }
                else if(ExtractMostRecentEmailReplyText != null)
                {
                    return ExtractMostRecentEmailReplyText.GetFieldDeserializers();
                }
                else if(ExtractMostRecentPlainTextEmailReply != null)
                {
                    return ExtractMostRecentPlainTextEmailReply.GetFieldDeserializers();
                }
                else if(FetchCurrencyDecimalPlaces != null)
                {
                    return FetchCurrencyDecimalPlaces.GetFieldDeserializers();
                }
                else if(FetchExchangeRate != null)
                {
                    return FetchExchangeRate.GetFieldDeserializers();
                }
                else if(FetchSingleCurrencyPortalCurrency != null)
                {
                    return FetchSingleCurrencyPortalCurrency.GetFieldDeserializers();
                }
                else if(FormatFullName != null)
                {
                    return FormatFullName.GetFieldDeserializers();
                }
                else if(HasEmailReply != null)
                {
                    return HasEmailReply.GetFieldDeserializers();
                }
                else if(HasPlainTextEmailReply != null)
                {
                    return HasPlainTextEmailReply.GetFieldDeserializers();
                }
                else if(IfBoolean != null)
                {
                    return IfBoolean.GetFieldDeserializers();
                }
                else if(IfNumber != null)
                {
                    return IfNumber.GetFieldDeserializers();
                }
                else if(IfString != null)
                {
                    return IfString.GetFieldDeserializers();
                }
                else if(IsEngagementType != null)
                {
                    return IsEngagementType.GetFieldDeserializers();
                }
                else if(IsPipelineStageClosed != null)
                {
                    return IsPipelineStageClosed.GetFieldDeserializers();
                }
                else if(IsPresent != null)
                {
                    return IsPresent.GetFieldDeserializers();
                }
                else if(LessThan != null)
                {
                    return LessThan.GetFieldDeserializers();
                }
                else if(LessThanOrEqual != null)
                {
                    return LessThanOrEqual.GetFieldDeserializers();
                }
                else if(LowerCase != null)
                {
                    return LowerCase.GetFieldDeserializers();
                }
                else if(MaxNumbers != null)
                {
                    return MaxNumbers.GetFieldDeserializers();
                }
                else if(MinNumbers != null)
                {
                    return MinNumbers.GetFieldDeserializers();
                }
                else if(Month != null)
                {
                    return Month.GetFieldDeserializers();
                }
                else if(MoreThan != null)
                {
                    return MoreThan.GetFieldDeserializers();
                }
                else if(MoreThanOrEqual != null)
                {
                    return MoreThanOrEqual.GetFieldDeserializers();
                }
                else if(MultiplyNumbers != null)
                {
                    return MultiplyNumbers.GetFieldDeserializers();
                }
                else if(Not != null)
                {
                    return Not.GetFieldDeserializers();
                }
                else if(Now != null)
                {
                    return Now.GetFieldDeserializers();
                }
                else if(NumberEquals != null)
                {
                    return NumberEquals.GetFieldDeserializers();
                }
                else if(NumberPropertyVariable != null)
                {
                    return NumberPropertyVariable.GetFieldDeserializers();
                }
                else if(NumberTargetPropertyVariable != null)
                {
                    return NumberTargetPropertyVariable.GetFieldDeserializers();
                }
                else if(NumberToString != null)
                {
                    return NumberToString.GetFieldDeserializers();
                }
                else if(Or != null)
                {
                    return Or.GetFieldDeserializers();
                }
                else if(ParseNumber != null)
                {
                    return ParseNumber.GetFieldDeserializers();
                }
                else if(PeriodToMonths != null)
                {
                    return PeriodToMonths.GetFieldDeserializers();
                }
                else if(PeriodToWeeks != null)
                {
                    return PeriodToWeeks.GetFieldDeserializers();
                }
                else if(PipelineProbability != null)
                {
                    return PipelineProbability.GetFieldDeserializers();
                }
                else if(Power != null)
                {
                    return Power.GetFieldDeserializers();
                }
                else if(RoundDownNumbers != null)
                {
                    return RoundDownNumbers.GetFieldDeserializers();
                }
                else if(RoundNearestNumbers != null)
                {
                    return RoundNearestNumbers.GetFieldDeserializers();
                }
                else if(RoundUpNumbers != null)
                {
                    return RoundUpNumbers.GetFieldDeserializers();
                }
                else if(SetContainsString != null)
                {
                    return SetContainsString.GetFieldDeserializers();
                }
                else if(SquareRoot != null)
                {
                    return SquareRoot.GetFieldDeserializers();
                }
                else if(StringEquals != null)
                {
                    return StringEquals.GetFieldDeserializers();
                }
                else if(StringLength != null)
                {
                    return StringLength.GetFieldDeserializers();
                }
                else if(StringPropertyVariable != null)
                {
                    return StringPropertyVariable.GetFieldDeserializers();
                }
                else if(StringTargetPropertyVariable != null)
                {
                    return StringTargetPropertyVariable.GetFieldDeserializers();
                }
                else if(Substring != null)
                {
                    return Substring.GetFieldDeserializers();
                }
                else if(SubtractNumbers != null)
                {
                    return SubtractNumbers.GetFieldDeserializers();
                }
                else if(SubtractTime != null)
                {
                    return SubtractTime.GetFieldDeserializers();
                }
                else if(TimeBetween != null)
                {
                    return TimeBetween.GetFieldDeserializers();
                }
                else if(TimestampOfPropertyVariable != null)
                {
                    return TimestampOfPropertyVariable.GetFieldDeserializers();
                }
                else if(TimestampOfTargetPropertyVariable != null)
                {
                    return TimestampOfTargetPropertyVariable.GetFieldDeserializers();
                }
                else if(UpperCase != null)
                {
                    return UpperCase.GetFieldDeserializers();
                }
                else if(Xor != null)
                {
                    return Xor.GetFieldDeserializers();
                }
                else if(Year != null)
                {
                    return Year.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(AbsoluteValue != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AbsoluteValue>(null, AbsoluteValue);
                }
                else if(AddNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddNumbers>(null, AddNumbers);
                }
                else if(AddTime != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.AddTime>(null, AddTime);
                }
                else if(And != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.And>(null, And);
                }
                else if(BeginsWith != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BeginsWith>(null, BeginsWith);
                }
                else if(BooleanPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanPropertyVariable>(null, BooleanPropertyVariable);
                }
                else if(BooleanTargetPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.BooleanTargetPropertyVariable>(null, BooleanTargetPropertyVariable);
                }
                else if(ConcatStrings != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConcatStrings>(null, ConcatStrings);
                }
                else if(ConstantBoolean != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantBoolean>(null, ConstantBoolean);
                }
                else if(ConstantNumber != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantNumber>(null, ConstantNumber);
                }
                else if(ConstantString != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ConstantString>(null, ConstantString);
                }
                else if(Contains != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Contains>(null, Contains);
                }
                else if(Date != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DateObject>(null, Date);
                }
                else if(DatedExchangeRate != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DatedExchangeRate>(null, DatedExchangeRate);
                }
                else if(DivideNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.DivideNumbers>(null, DivideNumbers);
                }
                else if(Euler != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Euler>(null, Euler);
                }
                else if(ExtractMostRecentEmailReplyHtml != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyHtml>(null, ExtractMostRecentEmailReplyHtml);
                }
                else if(ExtractMostRecentEmailReplyText != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentEmailReplyText>(null, ExtractMostRecentEmailReplyText);
                }
                else if(ExtractMostRecentPlainTextEmailReply != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ExtractMostRecentPlainTextEmailReply>(null, ExtractMostRecentPlainTextEmailReply);
                }
                else if(FetchCurrencyDecimalPlaces != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchCurrencyDecimalPlaces>(null, FetchCurrencyDecimalPlaces);
                }
                else if(FetchExchangeRate != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchExchangeRate>(null, FetchExchangeRate);
                }
                else if(FetchSingleCurrencyPortalCurrency != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FetchSingleCurrencyPortalCurrency>(null, FetchSingleCurrencyPortalCurrency);
                }
                else if(FormatFullName != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.FormatFullName>(null, FormatFullName);
                }
                else if(HasEmailReply != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasEmailReply>(null, HasEmailReply);
                }
                else if(HasPlainTextEmailReply != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.HasPlainTextEmailReply>(null, HasPlainTextEmailReply);
                }
                else if(IfBoolean != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfBoolean>(null, IfBoolean);
                }
                else if(IfNumber != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfNumber>(null, IfNumber);
                }
                else if(IfString != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IfString>(null, IfString);
                }
                else if(IsEngagementType != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsEngagementType>(null, IsEngagementType);
                }
                else if(IsPipelineStageClosed != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPipelineStageClosed>(null, IsPipelineStageClosed);
                }
                else if(IsPresent != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.IsPresent>(null, IsPresent);
                }
                else if(LessThan != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThan>(null, LessThan);
                }
                else if(LessThanOrEqual != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LessThanOrEqual>(null, LessThanOrEqual);
                }
                else if(LowerCase != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.LowerCase>(null, LowerCase);
                }
                else if(MaxNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MaxNumbers>(null, MaxNumbers);
                }
                else if(MinNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MinNumbers>(null, MinNumbers);
                }
                else if(Month != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Month>(null, Month);
                }
                else if(MoreThan != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThan>(null, MoreThan);
                }
                else if(MoreThanOrEqual != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MoreThanOrEqual>(null, MoreThanOrEqual);
                }
                else if(MultiplyNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.MultiplyNumbers>(null, MultiplyNumbers);
                }
                else if(Not != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Not>(null, Not);
                }
                else if(Now != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Now>(null, Now);
                }
                else if(NumberEquals != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberEquals>(null, NumberEquals);
                }
                else if(NumberPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberPropertyVariable>(null, NumberPropertyVariable);
                }
                else if(NumberTargetPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberTargetPropertyVariable>(null, NumberTargetPropertyVariable);
                }
                else if(NumberToString != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.NumberToString>(null, NumberToString);
                }
                else if(Or != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Or>(null, Or);
                }
                else if(ParseNumber != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.ParseNumber>(null, ParseNumber);
                }
                else if(PeriodToMonths != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToMonths>(null, PeriodToMonths);
                }
                else if(PeriodToWeeks != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PeriodToWeeks>(null, PeriodToWeeks);
                }
                else if(PipelineProbability != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.PipelineProbability>(null, PipelineProbability);
                }
                else if(Power != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Power>(null, Power);
                }
                else if(RoundDownNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundDownNumbers>(null, RoundDownNumbers);
                }
                else if(RoundNearestNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundNearestNumbers>(null, RoundNearestNumbers);
                }
                else if(RoundUpNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.RoundUpNumbers>(null, RoundUpNumbers);
                }
                else if(SetContainsString != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SetContainsString>(null, SetContainsString);
                }
                else if(SquareRoot != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SquareRoot>(null, SquareRoot);
                }
                else if(StringEquals != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringEquals>(null, StringEquals);
                }
                else if(StringLength != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringLength>(null, StringLength);
                }
                else if(StringPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringPropertyVariable>(null, StringPropertyVariable);
                }
                else if(StringTargetPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.StringTargetPropertyVariable>(null, StringTargetPropertyVariable);
                }
                else if(Substring != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Substring>(null, Substring);
                }
                else if(SubtractNumbers != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractNumbers>(null, SubtractNumbers);
                }
                else if(SubtractTime != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.SubtractTime>(null, SubtractTime);
                }
                else if(TimeBetween != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimeBetween>(null, TimeBetween);
                }
                else if(TimestampOfPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfPropertyVariable>(null, TimestampOfPropertyVariable);
                }
                else if(TimestampOfTargetPropertyVariable != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.TimestampOfTargetPropertyVariable>(null, TimestampOfTargetPropertyVariable);
                }
                else if(UpperCase != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.UpperCase>(null, UpperCase);
                }
                else if(Xor != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Xor>(null, Xor);
                }
                else if(Year != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CMS.MediaBridge.V1.Models.Year>(null, Year);
                }
            }
        }
    }
}
#pragma warning restore CS0618
