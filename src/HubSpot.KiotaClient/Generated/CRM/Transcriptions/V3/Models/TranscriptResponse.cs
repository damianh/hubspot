// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TranscriptResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The engagementId property</summary>
        public long? EngagementId { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The transcriptSource property</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse_transcriptSource? TranscriptSource { get; set; }
        /// <summary>The transcriptUtterances property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptUtterance>? TranscriptUtterances { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptUtterance> TranscriptUtterances { get; set; }
#endif
        /// <summary>The updatedAt property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse"/> and sets the default values.
        /// </summary>
        public TranscriptResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "engagementId", n => { EngagementId = n.GetLongValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "transcriptSource", n => { TranscriptSource = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse_transcriptSource>(); } },
                { "transcriptUtterances", n => { TranscriptUtterances = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptUtterance>(global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptUtterance.CreateFromDiscriminatorValue)?.AsList(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteLongValue("engagementId", EngagementId);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptResponse_transcriptSource>("transcriptSource", TranscriptSource);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Transcriptions.V3.Models.TranscriptUtterance>("transcriptUtterances", TranscriptUtterances);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
