// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models
{
    /// <summary>
    /// Defines a property to create.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ObjectTypePropertyCreate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A description of the property that will be shown as help text in HubSpot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.</summary>
        public int? DisplayOrder { get; set; }
        /// <summary>Controls how the property appears in HubSpot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldType { get; set; }
#nullable restore
#else
        public string FieldType { get; set; }
#endif
        /// <summary>Whether the property can be used in a HubSpot form.</summary>
        public bool? FormField { get; set; }
        /// <summary>The name of the group this property belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupName { get; set; }
#nullable restore
#else
        public string GroupName { get; set; }
#endif
        /// <summary>Whether or not the property&apos;s value must be unique. Once set, this can&apos;t be changed.</summary>
        public bool? HasUniqueValue { get; set; }
        /// <summary>The hidden property</summary>
        public bool? Hidden { get; set; }
        /// <summary>A human-readable property label that will be shown in HubSpot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>The internal property name, which must be used when referencing the property from the API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Controls how numeric properties are formatted in the HubSpot UI</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_numberDisplayHint? NumberDisplayHint { get; set; }
        /// <summary>A list of available options for the property. This field is only required for enumerated properties.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.OptionInput>? Options { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.OptionInput> Options { get; set; }
#endif
        /// <summary>Controls how the property options will be sorted in the HubSpot UI.</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_optionSortStrategy? OptionSortStrategy { get; set; }
        /// <summary>Defines the options this property will return, e.g. OWNER would return name of users on the portal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferencedObjectType { get; set; }
#nullable restore
#else
        public string ReferencedObjectType { get; set; }
#endif
        /// <summary>Allow users to search for information entered to this field (limited to 3 properties)</summary>
        public bool? SearchableInGlobalSearch { get; set; }
        /// <summary>Whether the property will display the currency symbol in the HubSpot UI.</summary>
        public bool? ShowCurrencySymbol { get; set; }
        /// <summary>Controls how text properties are formatted in the HubSpot UI</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_textDisplayHint? TextDisplayHint { get; set; }
        /// <summary>The data type of the property.</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate"/> and sets the default values.
        /// </summary>
        public ObjectTypePropertyCreate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayOrder", n => { DisplayOrder = n.GetIntValue(); } },
                { "fieldType", n => { FieldType = n.GetStringValue(); } },
                { "formField", n => { FormField = n.GetBoolValue(); } },
                { "groupName", n => { GroupName = n.GetStringValue(); } },
                { "hasUniqueValue", n => { HasUniqueValue = n.GetBoolValue(); } },
                { "hidden", n => { Hidden = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "numberDisplayHint", n => { NumberDisplayHint = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_numberDisplayHint>(); } },
                { "optionSortStrategy", n => { OptionSortStrategy = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_optionSortStrategy>(); } },
                { "options", n => { Options = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.OptionInput>(global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.OptionInput.CreateFromDiscriminatorValue)?.AsList(); } },
                { "referencedObjectType", n => { ReferencedObjectType = n.GetStringValue(); } },
                { "searchableInGlobalSearch", n => { SearchableInGlobalSearch = n.GetBoolValue(); } },
                { "showCurrencySymbol", n => { ShowCurrencySymbol = n.GetBoolValue(); } },
                { "textDisplayHint", n => { TextDisplayHint = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_textDisplayHint>(); } },
                { "type", n => { Type = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("displayOrder", DisplayOrder);
            writer.WriteStringValue("fieldType", FieldType);
            writer.WriteBoolValue("formField", FormField);
            writer.WriteStringValue("groupName", GroupName);
            writer.WriteBoolValue("hasUniqueValue", HasUniqueValue);
            writer.WriteBoolValue("hidden", Hidden);
            writer.WriteStringValue("label", Label);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_numberDisplayHint>("numberDisplayHint", NumberDisplayHint);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.OptionInput>("options", Options);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_optionSortStrategy>("optionSortStrategy", OptionSortStrategy);
            writer.WriteStringValue("referencedObjectType", ReferencedObjectType);
            writer.WriteBoolValue("searchableInGlobalSearch", SearchableInGlobalSearch);
            writer.WriteBoolValue("showCurrencySymbol", ShowCurrencySymbol);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_textDisplayHint>("textDisplayHint", TextDisplayHint);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Schemas.V3.Models.ObjectTypePropertyCreate_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
