// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicListConversionResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The convertedAt property</summary>
        public DateTimeOffset? ConvertedAt { get; set; }
        /// <summary>The listId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ListId { get; set; }
#nullable restore
#else
        public string ListId { get; set; }
#endif
        /// <summary>The requestedConversionTime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime? RequestedConversionTime { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime RequestedConversionTime { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse"/> and sets the default values.
        /// </summary>
        public PublicListConversionResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "convertedAt", n => { ConvertedAt = n.GetDateTimeOffsetValue(); } },
                { "listId", n => { ListId = n.GetStringValue(); } },
                { "requestedConversionTime", n => { RequestedConversionTime = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime>(global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("convertedAt", ConvertedAt);
            writer.WriteStringValue("listId", ListId);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime>("requestedConversionTime", RequestedConversionTime);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PublicListConversionResponse_requestedConversionTime : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate? PublicListConversionDate { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate PublicListConversionDate { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity? PublicListConversionInactivity { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity PublicListConversionInactivity { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionResponse.PublicListConversionResponse_requestedConversionTime();
                if("PublicListConversionDate".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicListConversionDate = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate();
                }
                else if("PublicListConversionInactivity".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicListConversionInactivity = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PublicListConversionDate != null)
                {
                    return PublicListConversionDate.GetFieldDeserializers();
                }
                else if(PublicListConversionInactivity != null)
                {
                    return PublicListConversionInactivity.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(PublicListConversionDate != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionDate>(null, PublicListConversionDate);
                }
                else if(PublicListConversionInactivity != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicListConversionInactivity>(null, PublicListConversionInactivity);
                }
            }
        }
    }
}
#pragma warning restore CS0618
