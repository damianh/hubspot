// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicEventFilterMetadata : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The operation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation? Operation { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation Operation { get; set; }
#endif
        /// <summary>The property property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Property { get; set; }
#nullable restore
#else
        public string Property { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata"/> and sets the default values.
        /// </summary>
        public PublicEventFilterMetadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "operation", n => { Operation = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation>(global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation.CreateFromDiscriminatorValue); } },
                { "property", n => { Property = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation>("operation", Operation);
            writer.WriteStringValue("property", Property);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PublicEventFilterMetadata_operation : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation? PublicAllPropertyTypesOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation PublicAllPropertyTypesOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation? PublicBoolPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation PublicBoolPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation? PublicCalendarDatePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation PublicCalendarDatePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation? PublicComparativeDatePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation PublicComparativeDatePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation? PublicComparativePropertyUpdatedOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation PublicComparativePropertyUpdatedOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation? PublicDatePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation PublicDatePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation? PublicDateTimePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation PublicDateTimePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation? PublicEnumerationPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation PublicEnumerationPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation? PublicMultiStringPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation PublicMultiStringPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation? PublicNumberPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation PublicNumberPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation? PublicRangedDatePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation PublicRangedDatePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation? PublicRangedNumberPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation PublicRangedNumberPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation? PublicRangedTimeOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation PublicRangedTimeOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation? PublicRollingDateRangePropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation PublicRollingDateRangePropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation? PublicRollingPropertyUpdatedOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation PublicRollingPropertyUpdatedOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation? PublicStringPropertyOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation PublicStringPropertyOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation? PublicTimePointOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation PublicTimePointOperation { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventFilterMetadata.PublicEventFilterMetadata_operation();
                if("PublicAllPropertyTypesOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAllPropertyTypesOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation();
                }
                else if("PublicBoolPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicBoolPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation();
                }
                else if("PublicCalendarDatePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicCalendarDatePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation();
                }
                else if("PublicComparativeDatePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicComparativeDatePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation();
                }
                else if("PublicComparativePropertyUpdatedOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicComparativePropertyUpdatedOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation();
                }
                else if("PublicDatePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicDatePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation();
                }
                else if("PublicDateTimePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicDateTimePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation();
                }
                else if("PublicEnumerationPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicEnumerationPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation();
                }
                else if("PublicMultiStringPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicMultiStringPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation();
                }
                else if("PublicNumberPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicNumberPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation();
                }
                else if("PublicRangedDatePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRangedDatePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation();
                }
                else if("PublicRangedNumberPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRangedNumberPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation();
                }
                else if("PublicRangedTimeOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRangedTimeOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation();
                }
                else if("PublicRollingDateRangePropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRollingDateRangePropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation();
                }
                else if("PublicRollingPropertyUpdatedOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRollingPropertyUpdatedOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation();
                }
                else if("PublicStringPropertyOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicStringPropertyOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation();
                }
                else if("PublicTimePointOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicTimePointOperation = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PublicAllPropertyTypesOperation != null)
                {
                    return PublicAllPropertyTypesOperation.GetFieldDeserializers();
                }
                else if(PublicBoolPropertyOperation != null)
                {
                    return PublicBoolPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicCalendarDatePropertyOperation != null)
                {
                    return PublicCalendarDatePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicComparativeDatePropertyOperation != null)
                {
                    return PublicComparativeDatePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicComparativePropertyUpdatedOperation != null)
                {
                    return PublicComparativePropertyUpdatedOperation.GetFieldDeserializers();
                }
                else if(PublicDatePropertyOperation != null)
                {
                    return PublicDatePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicDateTimePropertyOperation != null)
                {
                    return PublicDateTimePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicEnumerationPropertyOperation != null)
                {
                    return PublicEnumerationPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicMultiStringPropertyOperation != null)
                {
                    return PublicMultiStringPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicNumberPropertyOperation != null)
                {
                    return PublicNumberPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicRangedDatePropertyOperation != null)
                {
                    return PublicRangedDatePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicRangedNumberPropertyOperation != null)
                {
                    return PublicRangedNumberPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicRangedTimeOperation != null)
                {
                    return PublicRangedTimeOperation.GetFieldDeserializers();
                }
                else if(PublicRollingDateRangePropertyOperation != null)
                {
                    return PublicRollingDateRangePropertyOperation.GetFieldDeserializers();
                }
                else if(PublicRollingPropertyUpdatedOperation != null)
                {
                    return PublicRollingPropertyUpdatedOperation.GetFieldDeserializers();
                }
                else if(PublicStringPropertyOperation != null)
                {
                    return PublicStringPropertyOperation.GetFieldDeserializers();
                }
                else if(PublicTimePointOperation != null)
                {
                    return PublicTimePointOperation.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(PublicAllPropertyTypesOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAllPropertyTypesOperation>(null, PublicAllPropertyTypesOperation);
                }
                else if(PublicBoolPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicBoolPropertyOperation>(null, PublicBoolPropertyOperation);
                }
                else if(PublicCalendarDatePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCalendarDatePropertyOperation>(null, PublicCalendarDatePropertyOperation);
                }
                else if(PublicComparativeDatePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativeDatePropertyOperation>(null, PublicComparativeDatePropertyOperation);
                }
                else if(PublicComparativePropertyUpdatedOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicComparativePropertyUpdatedOperation>(null, PublicComparativePropertyUpdatedOperation);
                }
                else if(PublicDatePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDatePropertyOperation>(null, PublicDatePropertyOperation);
                }
                else if(PublicDateTimePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicDateTimePropertyOperation>(null, PublicDateTimePropertyOperation);
                }
                else if(PublicEnumerationPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEnumerationPropertyOperation>(null, PublicEnumerationPropertyOperation);
                }
                else if(PublicMultiStringPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicMultiStringPropertyOperation>(null, PublicMultiStringPropertyOperation);
                }
                else if(PublicNumberPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumberPropertyOperation>(null, PublicNumberPropertyOperation);
                }
                else if(PublicRangedDatePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedDatePropertyOperation>(null, PublicRangedDatePropertyOperation);
                }
                else if(PublicRangedNumberPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedNumberPropertyOperation>(null, PublicRangedNumberPropertyOperation);
                }
                else if(PublicRangedTimeOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRangedTimeOperation>(null, PublicRangedTimeOperation);
                }
                else if(PublicRollingDateRangePropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingDateRangePropertyOperation>(null, PublicRollingDateRangePropertyOperation);
                }
                else if(PublicRollingPropertyUpdatedOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRollingPropertyUpdatedOperation>(null, PublicRollingPropertyUpdatedOperation);
                }
                else if(PublicStringPropertyOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicStringPropertyOperation>(null, PublicStringPropertyOperation);
                }
                else if(PublicTimePointOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicTimePointOperation>(null, PublicTimePointOperation);
                }
            }
        }
    }
}
#pragma warning restore CS0618
