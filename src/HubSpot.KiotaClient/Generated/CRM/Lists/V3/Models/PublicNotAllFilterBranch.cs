// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicNotAllFilterBranch : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The filterBranches property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches>? FilterBranches { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches> FilterBranches { get; set; }
#endif
        /// <summary>The filterBranchOperator property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FilterBranchOperator { get; set; }
#nullable restore
#else
        public string FilterBranchOperator { get; set; }
#endif
        /// <summary>The filterBranchType property</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch_filterBranchType? FilterBranchType { get; set; }
        /// <summary>The filters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters>? Filters { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters> Filters { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch"/> and sets the default values.
        /// </summary>
        public PublicNotAllFilterBranch()
        {
            AdditionalData = new Dictionary<string, object>();
            FilterBranchType = global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch_filterBranchType.NOT_ALL;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "filterBranchOperator", n => { FilterBranchOperator = n.GetStringValue(); } },
                { "filterBranchType", n => { FilterBranchType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch_filterBranchType>(); } },
                { "filterBranches", n => { FilterBranches = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches>(global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches.CreateFromDiscriminatorValue)?.AsList(); } },
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters>(global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches>("filterBranches", FilterBranches);
            writer.WriteStringValue("filterBranchOperator", FilterBranchOperator);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch_filterBranchType>("filterBranchType", FilterBranchType);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters>("filters", Filters);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PublicNotAllFilterBranch_filterBranches : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch? PublicAndFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch PublicAndFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch? PublicAssociationFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch PublicAssociationFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch? PublicNotAllFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch PublicNotAllFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch? PublicNotAnyFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch PublicNotAnyFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch? PublicOrFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch PublicOrFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch? PublicPropertyAssociationFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch PublicPropertyAssociationFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch? PublicRestrictedFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch PublicRestrictedFilterBranch { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch? PublicUnifiedEventsFilterBranch { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch PublicUnifiedEventsFilterBranch { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filterBranches();
                if("PublicAndFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAndFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch();
                }
                else if("PublicAssociationFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAssociationFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch();
                }
                else if("PublicNotAllFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicNotAllFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch();
                }
                else if("PublicNotAnyFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicNotAnyFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch();
                }
                else if("PublicOrFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicOrFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch();
                }
                else if("PublicPropertyAssociationFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicPropertyAssociationFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch();
                }
                else if("PublicRestrictedFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicRestrictedFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch();
                }
                else if("PublicUnifiedEventsFilterBranch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicUnifiedEventsFilterBranch = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PublicAndFilterBranch != null)
                {
                    return PublicAndFilterBranch.GetFieldDeserializers();
                }
                else if(PublicAssociationFilterBranch != null)
                {
                    return PublicAssociationFilterBranch.GetFieldDeserializers();
                }
                else if(PublicNotAllFilterBranch != null)
                {
                    return PublicNotAllFilterBranch.GetFieldDeserializers();
                }
                else if(PublicNotAnyFilterBranch != null)
                {
                    return PublicNotAnyFilterBranch.GetFieldDeserializers();
                }
                else if(PublicOrFilterBranch != null)
                {
                    return PublicOrFilterBranch.GetFieldDeserializers();
                }
                else if(PublicPropertyAssociationFilterBranch != null)
                {
                    return PublicPropertyAssociationFilterBranch.GetFieldDeserializers();
                }
                else if(PublicRestrictedFilterBranch != null)
                {
                    return PublicRestrictedFilterBranch.GetFieldDeserializers();
                }
                else if(PublicUnifiedEventsFilterBranch != null)
                {
                    return PublicUnifiedEventsFilterBranch.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(PublicAndFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAndFilterBranch>(null, PublicAndFilterBranch);
                }
                else if(PublicAssociationFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationFilterBranch>(null, PublicAssociationFilterBranch);
                }
                else if(PublicNotAllFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch>(null, PublicNotAllFilterBranch);
                }
                else if(PublicNotAnyFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAnyFilterBranch>(null, PublicNotAnyFilterBranch);
                }
                else if(PublicOrFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicOrFilterBranch>(null, PublicOrFilterBranch);
                }
                else if(PublicPropertyAssociationFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationFilterBranch>(null, PublicPropertyAssociationFilterBranch);
                }
                else if(PublicRestrictedFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicRestrictedFilterBranch>(null, PublicRestrictedFilterBranch);
                }
                else if(PublicUnifiedEventsFilterBranch != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilterBranch>(null, PublicUnifiedEventsFilterBranch);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter"/>, <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PublicNotAllFilterBranch_filters : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter? PublicAdsSearchFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter PublicAdsSearchFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter? PublicAdsTimeFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter PublicAdsTimeFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter? PublicAssociationInListFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter PublicAssociationInListFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter? PublicCampaignInfluencedFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter PublicCampaignInfluencedFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter? PublicCommunicationSubscriptionFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter PublicCommunicationSubscriptionFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter? PublicConstantFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter PublicConstantFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter? PublicCtaAnalyticsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter PublicCtaAnalyticsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter? PublicEmailEventFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter PublicEmailEventFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter? PublicEmailSubscriptionFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter PublicEmailSubscriptionFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter? PublicEventAnalyticsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter PublicEventAnalyticsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter? PublicFormSubmissionFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter PublicFormSubmissionFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter? PublicFormSubmissionOnPageFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter PublicFormSubmissionOnPageFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter? PublicInListFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter PublicInListFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter? PublicIntegrationEventFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter PublicIntegrationEventFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter? PublicNumAssociationsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter PublicNumAssociationsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter? PublicPageViewAnalyticsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter PublicPageViewAnalyticsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter? PublicPrivacyAnalyticsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter PublicPrivacyAnalyticsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter? PublicPropertyAssociationInListFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter PublicPropertyAssociationInListFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter? PublicPropertyFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter PublicPropertyFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter? PublicSurveyMonkeyFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter PublicSurveyMonkeyFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter? PublicSurveyMonkeyValueFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter PublicSurveyMonkeyValueFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter? PublicUnifiedEventsFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter PublicUnifiedEventsFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter? PublicWebinarFilter { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter PublicWebinarFilter { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNotAllFilterBranch.PublicNotAllFilterBranch_filters();
                if("PublicAdsSearchFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAdsSearchFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter();
                }
                else if("PublicAdsTimeFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAdsTimeFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter();
                }
                else if("PublicAssociationInListFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicAssociationInListFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter();
                }
                else if("PublicCampaignInfluencedFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicCampaignInfluencedFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter();
                }
                else if("PublicCommunicationSubscriptionFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicCommunicationSubscriptionFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter();
                }
                else if("PublicConstantFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicConstantFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter();
                }
                else if("PublicCtaAnalyticsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicCtaAnalyticsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter();
                }
                else if("PublicEmailEventFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicEmailEventFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter();
                }
                else if("PublicEmailSubscriptionFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicEmailSubscriptionFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter();
                }
                else if("PublicEventAnalyticsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicEventAnalyticsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter();
                }
                else if("PublicFormSubmissionFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicFormSubmissionFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter();
                }
                else if("PublicFormSubmissionOnPageFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicFormSubmissionOnPageFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter();
                }
                else if("PublicInListFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicInListFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter();
                }
                else if("PublicIntegrationEventFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicIntegrationEventFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter();
                }
                else if("PublicNumAssociationsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicNumAssociationsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter();
                }
                else if("PublicPageViewAnalyticsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicPageViewAnalyticsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter();
                }
                else if("PublicPrivacyAnalyticsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicPrivacyAnalyticsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter();
                }
                else if("PublicPropertyAssociationInListFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicPropertyAssociationInListFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter();
                }
                else if("PublicPropertyFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicPropertyFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter();
                }
                else if("PublicSurveyMonkeyFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicSurveyMonkeyFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter();
                }
                else if("PublicSurveyMonkeyValueFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicSurveyMonkeyValueFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter();
                }
                else if("PublicUnifiedEventsFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicUnifiedEventsFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter();
                }
                else if("PublicWebinarFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PublicWebinarFilter = new global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PublicAdsSearchFilter != null)
                {
                    return PublicAdsSearchFilter.GetFieldDeserializers();
                }
                else if(PublicAdsTimeFilter != null)
                {
                    return PublicAdsTimeFilter.GetFieldDeserializers();
                }
                else if(PublicAssociationInListFilter != null)
                {
                    return PublicAssociationInListFilter.GetFieldDeserializers();
                }
                else if(PublicCampaignInfluencedFilter != null)
                {
                    return PublicCampaignInfluencedFilter.GetFieldDeserializers();
                }
                else if(PublicCommunicationSubscriptionFilter != null)
                {
                    return PublicCommunicationSubscriptionFilter.GetFieldDeserializers();
                }
                else if(PublicConstantFilter != null)
                {
                    return PublicConstantFilter.GetFieldDeserializers();
                }
                else if(PublicCtaAnalyticsFilter != null)
                {
                    return PublicCtaAnalyticsFilter.GetFieldDeserializers();
                }
                else if(PublicEmailEventFilter != null)
                {
                    return PublicEmailEventFilter.GetFieldDeserializers();
                }
                else if(PublicEmailSubscriptionFilter != null)
                {
                    return PublicEmailSubscriptionFilter.GetFieldDeserializers();
                }
                else if(PublicEventAnalyticsFilter != null)
                {
                    return PublicEventAnalyticsFilter.GetFieldDeserializers();
                }
                else if(PublicFormSubmissionFilter != null)
                {
                    return PublicFormSubmissionFilter.GetFieldDeserializers();
                }
                else if(PublicFormSubmissionOnPageFilter != null)
                {
                    return PublicFormSubmissionOnPageFilter.GetFieldDeserializers();
                }
                else if(PublicInListFilter != null)
                {
                    return PublicInListFilter.GetFieldDeserializers();
                }
                else if(PublicIntegrationEventFilter != null)
                {
                    return PublicIntegrationEventFilter.GetFieldDeserializers();
                }
                else if(PublicNumAssociationsFilter != null)
                {
                    return PublicNumAssociationsFilter.GetFieldDeserializers();
                }
                else if(PublicPageViewAnalyticsFilter != null)
                {
                    return PublicPageViewAnalyticsFilter.GetFieldDeserializers();
                }
                else if(PublicPrivacyAnalyticsFilter != null)
                {
                    return PublicPrivacyAnalyticsFilter.GetFieldDeserializers();
                }
                else if(PublicPropertyAssociationInListFilter != null)
                {
                    return PublicPropertyAssociationInListFilter.GetFieldDeserializers();
                }
                else if(PublicPropertyFilter != null)
                {
                    return PublicPropertyFilter.GetFieldDeserializers();
                }
                else if(PublicSurveyMonkeyFilter != null)
                {
                    return PublicSurveyMonkeyFilter.GetFieldDeserializers();
                }
                else if(PublicSurveyMonkeyValueFilter != null)
                {
                    return PublicSurveyMonkeyValueFilter.GetFieldDeserializers();
                }
                else if(PublicUnifiedEventsFilter != null)
                {
                    return PublicUnifiedEventsFilter.GetFieldDeserializers();
                }
                else if(PublicWebinarFilter != null)
                {
                    return PublicWebinarFilter.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(PublicAdsSearchFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsSearchFilter>(null, PublicAdsSearchFilter);
                }
                else if(PublicAdsTimeFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAdsTimeFilter>(null, PublicAdsTimeFilter);
                }
                else if(PublicAssociationInListFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicAssociationInListFilter>(null, PublicAssociationInListFilter);
                }
                else if(PublicCampaignInfluencedFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCampaignInfluencedFilter>(null, PublicCampaignInfluencedFilter);
                }
                else if(PublicCommunicationSubscriptionFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCommunicationSubscriptionFilter>(null, PublicCommunicationSubscriptionFilter);
                }
                else if(PublicConstantFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicConstantFilter>(null, PublicConstantFilter);
                }
                else if(PublicCtaAnalyticsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicCtaAnalyticsFilter>(null, PublicCtaAnalyticsFilter);
                }
                else if(PublicEmailEventFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailEventFilter>(null, PublicEmailEventFilter);
                }
                else if(PublicEmailSubscriptionFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEmailSubscriptionFilter>(null, PublicEmailSubscriptionFilter);
                }
                else if(PublicEventAnalyticsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicEventAnalyticsFilter>(null, PublicEventAnalyticsFilter);
                }
                else if(PublicFormSubmissionFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionFilter>(null, PublicFormSubmissionFilter);
                }
                else if(PublicFormSubmissionOnPageFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicFormSubmissionOnPageFilter>(null, PublicFormSubmissionOnPageFilter);
                }
                else if(PublicInListFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicInListFilter>(null, PublicInListFilter);
                }
                else if(PublicIntegrationEventFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicIntegrationEventFilter>(null, PublicIntegrationEventFilter);
                }
                else if(PublicNumAssociationsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicNumAssociationsFilter>(null, PublicNumAssociationsFilter);
                }
                else if(PublicPageViewAnalyticsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPageViewAnalyticsFilter>(null, PublicPageViewAnalyticsFilter);
                }
                else if(PublicPrivacyAnalyticsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPrivacyAnalyticsFilter>(null, PublicPrivacyAnalyticsFilter);
                }
                else if(PublicPropertyAssociationInListFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyAssociationInListFilter>(null, PublicPropertyAssociationInListFilter);
                }
                else if(PublicPropertyFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicPropertyFilter>(null, PublicPropertyFilter);
                }
                else if(PublicSurveyMonkeyFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyFilter>(null, PublicSurveyMonkeyFilter);
                }
                else if(PublicSurveyMonkeyValueFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicSurveyMonkeyValueFilter>(null, PublicSurveyMonkeyValueFilter);
                }
                else if(PublicUnifiedEventsFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicUnifiedEventsFilter>(null, PublicUnifiedEventsFilter);
                }
                else if(PublicWebinarFilter != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.CRM.Lists.V3.Models.PublicWebinarFilter>(null, PublicWebinarFilter);
                }
            }
        }
    }
}
#pragma warning restore CS0618
