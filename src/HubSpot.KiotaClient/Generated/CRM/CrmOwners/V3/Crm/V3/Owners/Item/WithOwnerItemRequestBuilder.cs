// <auto-generated/>
#pragma warning disable CS0618
using DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \crm\v3\owners\{ownerId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithOwnerItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOwnerItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/crm/v3/owners/{ownerId}{?archived*,idProperty*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOwnerItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/crm/v3/owners/{ownerId}{?archived*,idProperty*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieve details of a specific owner using either their &apos;id&apos; or &apos;userId&apos;.
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models.PublicOwner"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models.PublicOwner?> GetAsync(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder.WithOwnerItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models.PublicOwner> GetAsync(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder.WithOwnerItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models.PublicOwner>(requestInfo, global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Models.PublicOwner.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieve details of a specific owner using either their &apos;id&apos; or &apos;userId&apos;.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder.WithOwnerItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder.WithOwnerItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieve details of a specific owner using either their &apos;id&apos; or &apos;userId&apos;.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithOwnerItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Whether to return only results that have been archived.</summary>
            [QueryParameter("archived")]
            public bool? Archived { get; set; }
            /// <summary>Specifies whether to use &apos;id&apos; or &apos;userId&apos; as the identifier for the owner.</summary>
            [Obsolete("This property is deprecated, use IdPropertyAsGetIdPropertyQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("idProperty")]
            public string? IdProperty { get; set; }
#nullable restore
#else
            [QueryParameter("idProperty")]
            public string IdProperty { get; set; }
#endif
            /// <summary>Specifies whether to use &apos;id&apos; or &apos;userId&apos; as the identifier for the owner.</summary>
            [QueryParameter("idProperty")]
            public global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.GetIdPropertyQueryParameterType? IdPropertyAsGetIdPropertyQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithOwnerItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::DamianH.HubSpot.KiotaClient.CRM.CrmOwners.V3.Crm.V3.Owners.Item.WithOwnerItemRequestBuilder.WithOwnerItemRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
