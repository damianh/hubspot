// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models
{
    /// <summary>
    /// Variant of CardFetchBody with fields as optional for patches
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CardFetchBodyPatch : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cardType property</summary>
        public global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch_cardType? CardType { get; set; }
        /// <summary>An array of CRM object types where this card should be displayed. HubSpot will call your target URL whenever a user visits a record page of the types defined here.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardObjectTypeBody>? ObjectTypes { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardObjectTypeBody> ObjectTypes { get; set; }
#endif
        /// <summary>The serverlessFunction property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServerlessFunction { get; set; }
#nullable restore
#else
        public string ServerlessFunction { get; set; }
#endif
        /// <summary>URL to a service endpoint that will respond with details for this card. HubSpot will call this endpoint each time a user visits a CRM record page where this card should be displayed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetUrl { get; set; }
#nullable restore
#else
        public string TargetUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch"/> and sets the default values.
        /// </summary>
        public CardFetchBodyPatch()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cardType", n => { CardType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch_cardType>(); } },
                { "objectTypes", n => { ObjectTypes = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardObjectTypeBody>(global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardObjectTypeBody.CreateFromDiscriminatorValue)?.AsList(); } },
                { "serverlessFunction", n => { ServerlessFunction = n.GetStringValue(); } },
                { "targetUrl", n => { TargetUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardFetchBodyPatch_cardType>("cardType", CardType);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.CRM.PublicAppCrmCards.V3.Models.CardObjectTypeBody>("objectTypes", ObjectTypes);
            writer.WriteStringValue("serverlessFunction", ServerlessFunction);
            writer.WriteStringValue("targetUrl", TargetUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
