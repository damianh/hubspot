// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.CRM.CallingExtensions.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SettingsRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The target height of the iframe that will contain your phone/calling UI.</summary>
        public int? Height { get; set; }
        /// <summary>When true, this indicates that your calling app is ready for production. Users will be able to select your calling app as their provider and can then click to dial within HubSpot.</summary>
        public bool? IsReady { get; set; }
        /// <summary>The name of your calling service to display to users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>When true, users will be able to click to dial from custom objects.</summary>
        public bool? SupportsCustomObjects { get; set; }
        /// <summary>When true, this indicates that your calling app supports inbound calling within HubSpot.</summary>
        public bool? SupportsInboundCalling { get; set; }
        /// <summary>The URL to your phone/calling UI, built with the [Calling SDK](#).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>When false, this indicates that your calling app does not require the use of the separate calling window to hold the call connection. </summary>
        public bool? UsesCallingWindow { get; set; }
        /// <summary>The target width of the iframe that will contain your phone/calling UI.</summary>
        public int? Width { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CallingExtensions.V3.Models.SettingsRequest"/> and sets the default values.
        /// </summary>
        public SettingsRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.CRM.CallingExtensions.V3.Models.SettingsRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.CRM.CallingExtensions.V3.Models.SettingsRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.CRM.CallingExtensions.V3.Models.SettingsRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "height", n => { Height = n.GetIntValue(); } },
                { "isReady", n => { IsReady = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "supportsCustomObjects", n => { SupportsCustomObjects = n.GetBoolValue(); } },
                { "supportsInboundCalling", n => { SupportsInboundCalling = n.GetBoolValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "usesCallingWindow", n => { UsesCallingWindow = n.GetBoolValue(); } },
                { "width", n => { Width = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("height", Height);
            writer.WriteBoolValue("isReady", IsReady);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("supportsCustomObjects", SupportsCustomObjects);
            writer.WriteBoolValue("supportsInboundCalling", SupportsInboundCalling);
            writer.WriteStringValue("url", Url);
            writer.WriteBoolValue("usesCallingWindow", UsesCallingWindow);
            writer.WriteIntValue("width", Width);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
