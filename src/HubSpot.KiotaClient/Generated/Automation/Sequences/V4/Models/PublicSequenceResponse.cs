// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicSequenceResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The dependencies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepDependencyResponse>? Dependencies { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepDependencyResponse> Dependencies { get; set; }
#endif
        /// <summary>The folderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FolderId { get; set; }
#nullable restore
#else
        public string FolderId { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceSettingsResponse? Settings { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceSettingsResponse Settings { get; set; }
#endif
        /// <summary>The steps property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepResponse>? Steps { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepResponse> Steps { get; set; }
#endif
        /// <summary>The updatedAt property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The userId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceResponse"/> and sets the default values.
        /// </summary>
        public PublicSequenceResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "dependencies", n => { Dependencies = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepDependencyResponse>(global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepDependencyResponse.CreateFromDiscriminatorValue)?.AsList(); } },
                { "folderId", n => { FolderId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "settings", n => { Settings = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceSettingsResponse>(global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceSettingsResponse.CreateFromDiscriminatorValue); } },
                { "steps", n => { Steps = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepResponse>(global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepResponse.CreateFromDiscriminatorValue)?.AsList(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepDependencyResponse>("dependencies", Dependencies);
            writer.WriteStringValue("folderId", FolderId);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceSettingsResponse>("settings", Settings);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Automation.Sequences.V4.Models.PublicSequenceStepResponse>("steps", Steps);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteStringValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
