// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Files.Files.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FolderActionResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>When the requested changes have been completed.</summary>
        public DateTimeOffset? CompletedAt { get; set; }
        /// <summary>Detailed errors resulting from the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.StandardError>? Errors { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.StandardError> Errors { get; set; }
#endif
        /// <summary>Link to check the status of the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_links? Links { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_links Links { get; set; }
#endif
        /// <summary>Number of errors resulting from the requested changes.</summary>
        public int? NumErrors { get; set; }
        /// <summary>Timestamp representing when the task was requested.</summary>
        public DateTimeOffset? RequestedAt { get; set; }
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.Folder? Result { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.Folder Result { get; set; }
#endif
        /// <summary>Timestamp representing when the task was started at.</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>Current status of the task.</summary>
        public global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_status? Status { get; set; }
        /// <summary>ID of the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaskId { get; set; }
#nullable restore
#else
        public string TaskId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse"/> and sets the default values.
        /// </summary>
        public FolderActionResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "completedAt", n => { CompletedAt = n.GetDateTimeOffsetValue(); } },
                { "errors", n => { Errors = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.StandardError>(global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.StandardError.CreateFromDiscriminatorValue)?.AsList(); } },
                { "links", n => { Links = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_links>(global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_links.CreateFromDiscriminatorValue); } },
                { "numErrors", n => { NumErrors = n.GetIntValue(); } },
                { "requestedAt", n => { RequestedAt = n.GetDateTimeOffsetValue(); } },
                { "result", n => { Result = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.Folder>(global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.Folder.CreateFromDiscriminatorValue); } },
                { "startedAt", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_status>(); } },
                { "taskId", n => { TaskId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("completedAt", CompletedAt);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.StandardError>("errors", Errors);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_links>("links", Links);
            writer.WriteIntValue("numErrors", NumErrors);
            writer.WriteDateTimeOffsetValue("requestedAt", RequestedAt);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.Folder>("result", Result);
            writer.WriteDateTimeOffsetValue("startedAt", StartedAt);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Files.Files.V3.Models.FolderActionResponse_status>("status", Status);
            writer.WriteStringValue("taskId", TaskId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
