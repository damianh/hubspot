// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ChannelIntegrationMessageEgg : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attachments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments>? Attachments { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments> Attachments { get; set; }
#endif
        /// <summary>The channelAccountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChannelAccountId { get; set; }
#nullable restore
#else
        public string ChannelAccountId { get; set; }
#endif
        /// <summary>The inReplyToId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InReplyToId { get; set; }
#nullable restore
#else
        public string InReplyToId { get; set; }
#endif
        /// <summary>The integrationIdempotencyId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IntegrationIdempotencyId { get; set; }
#nullable restore
#else
        public string IntegrationIdempotencyId { get; set; }
#endif
        /// <summary>The integrationThreadId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IntegrationThreadId { get; set; }
#nullable restore
#else
        public string IntegrationThreadId { get; set; }
#endif
        /// <summary>The messageDirection property</summary>
        public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg_messageDirection? MessageDirection { get; set; }
        /// <summary>The preResolvedContacts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.PreResolvedContacts? PreResolvedContacts { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.PreResolvedContacts PreResolvedContacts { get; set; }
#endif
        /// <summary>The recipients property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>? Recipients { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant> Recipients { get; set; }
#endif
        /// <summary>The richText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RichText { get; set; }
#nullable restore
#else
        public string RichText { get; set; }
#endif
        /// <summary>The senders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>? Senders { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant> Senders { get; set; }
#endif
        /// <summary>The text property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>The timestamp property</summary>
        public DateTimeOffset? Timestamp { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg"/> and sets the default values.
        /// </summary>
        public ChannelIntegrationMessageEgg()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments>(global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments.CreateFromDiscriminatorValue)?.AsList(); } },
                { "channelAccountId", n => { ChannelAccountId = n.GetStringValue(); } },
                { "inReplyToId", n => { InReplyToId = n.GetStringValue(); } },
                { "integrationIdempotencyId", n => { IntegrationIdempotencyId = n.GetStringValue(); } },
                { "integrationThreadId", n => { IntegrationThreadId = n.GetStringValue(); } },
                { "messageDirection", n => { MessageDirection = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg_messageDirection>(); } },
                { "preResolvedContacts", n => { PreResolvedContacts = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.PreResolvedContacts>(global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.PreResolvedContacts.CreateFromDiscriminatorValue); } },
                { "recipients", n => { Recipients = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>(global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant.CreateFromDiscriminatorValue)?.AsList(); } },
                { "richText", n => { RichText = n.GetStringValue(); } },
                { "senders", n => { Senders = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>(global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant.CreateFromDiscriminatorValue)?.AsList(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "timestamp", n => { Timestamp = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments>("attachments", Attachments);
            writer.WriteStringValue("channelAccountId", ChannelAccountId);
            writer.WriteStringValue("inReplyToId", InReplyToId);
            writer.WriteStringValue("integrationIdempotencyId", IntegrationIdempotencyId);
            writer.WriteStringValue("integrationThreadId", IntegrationThreadId);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg_messageDirection>("messageDirection", MessageDirection);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.PreResolvedContacts>("preResolvedContacts", PreResolvedContacts);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>("recipients", Recipients);
            writer.WriteStringValue("richText", RichText);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationParticipant>("senders", Senders);
            writer.WriteStringValue("text", Text);
            writer.WriteDateTimeOffsetValue("timestamp", Timestamp);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ChannelIntegrationMessageEgg_attachments : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment? ContactAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment ContactAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment? FileAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment FileAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment? LocationAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment LocationAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment? MessageHeaderAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment MessageHeaderAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment? QuickRepliesAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment QuickRepliesAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment? SocialMetadataIntegrationAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment SocialMetadataIntegrationAttachment { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment? UnsupportedContentAttachment { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment UnsupportedContentAttachment { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ChannelIntegrationMessageEgg.ChannelIntegrationMessageEgg_attachments();
                if("ContactAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ContactAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment();
                }
                else if("FileAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FileAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment();
                }
                else if("LocationAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LocationAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment();
                }
                else if("MessageHeaderAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MessageHeaderAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment();
                }
                else if("QuickRepliesAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.QuickRepliesAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment();
                }
                else if("SocialMetadataIntegrationAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SocialMetadataIntegrationAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment();
                }
                else if("UnsupportedContentAttachment".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.UnsupportedContentAttachment = new global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ContactAttachment != null)
                {
                    return ContactAttachment.GetFieldDeserializers();
                }
                else if(FileAttachment != null)
                {
                    return FileAttachment.GetFieldDeserializers();
                }
                else if(LocationAttachment != null)
                {
                    return LocationAttachment.GetFieldDeserializers();
                }
                else if(MessageHeaderAttachment != null)
                {
                    return MessageHeaderAttachment.GetFieldDeserializers();
                }
                else if(QuickRepliesAttachment != null)
                {
                    return QuickRepliesAttachment.GetFieldDeserializers();
                }
                else if(SocialMetadataIntegrationAttachment != null)
                {
                    return SocialMetadataIntegrationAttachment.GetFieldDeserializers();
                }
                else if(UnsupportedContentAttachment != null)
                {
                    return UnsupportedContentAttachment.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(ContactAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.ContactAttachment>(null, ContactAttachment);
                }
                else if(FileAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.FileAttachment>(null, FileAttachment);
                }
                else if(LocationAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.LocationAttachment>(null, LocationAttachment);
                }
                else if(MessageHeaderAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.MessageHeaderAttachment>(null, MessageHeaderAttachment);
                }
                else if(QuickRepliesAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.QuickRepliesAttachment>(null, QuickRepliesAttachment);
                }
                else if(SocialMetadataIntegrationAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.SocialMetadataIntegrationAttachment>(null, SocialMetadataIntegrationAttachment);
                }
                else if(UnsupportedContentAttachment != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Conversations.CustomChannels.V3.Models.UnsupportedContentAttachment>(null, UnsupportedContentAttachment);
                }
            }
        }
    }
}
#pragma warning restore CS0618
