// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PublicApiUserActionEvent : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The actingUser property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.ActingUser? ActingUser { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.ActingUser ActingUser { get; set; }
#endif
        /// <summary>The type of action taken.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Action { get; set; }
#nullable restore
#else
        public string Action { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The category of the activity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Category { get; set; }
#nullable restore
#else
        public string Category { get; set; }
#endif
        /// <summary>The unique ID of the activity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The time that the action occurred at.</summary>
        public DateTimeOffset? OccurredAt { get; set; }
        /// <summary>The subcategory of the activity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubCategory { get; set; }
#nullable restore
#else
        public string SubCategory { get; set; }
#endif
        /// <summary>The ID of the impacted object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetObjectId { get; set; }
#nullable restore
#else
        public string TargetObjectId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.PublicApiUserActionEvent"/> and sets the default values.
        /// </summary>
        public PublicApiUserActionEvent()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.PublicApiUserActionEvent"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.PublicApiUserActionEvent CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.PublicApiUserActionEvent();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actingUser", n => { ActingUser = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.ActingUser>(global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.ActingUser.CreateFromDiscriminatorValue); } },
                { "action", n => { Action = n.GetStringValue(); } },
                { "category", n => { Category = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "occurredAt", n => { OccurredAt = n.GetDateTimeOffsetValue(); } },
                { "subCategory", n => { SubCategory = n.GetStringValue(); } },
                { "targetObjectId", n => { TargetObjectId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.ActingUser>("actingUser", ActingUser);
            writer.WriteStringValue("action", Action);
            writer.WriteStringValue("category", Category);
            writer.WriteStringValue("id", Id);
            writer.WriteDateTimeOffsetValue("occurredAt", OccurredAt);
            writer.WriteStringValue("subCategory", SubCategory);
            writer.WriteStringValue("targetObjectId", TargetObjectId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
