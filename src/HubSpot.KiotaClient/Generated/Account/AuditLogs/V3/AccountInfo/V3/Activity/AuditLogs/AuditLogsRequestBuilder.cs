// <auto-generated/>
#pragma warning disable CS0618
using DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs
{
    /// <summary>
    /// Builds and executes requests for operations under \account-info\v3\activity\audit-logs
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AuditLogsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuditLogsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/account-info/v3/activity/audit-logs{?actingUserId*,after*,limit*,occurredAfter*,occurredBefore*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuditLogsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/account-info/v3/activity/audit-logs{?actingUserId*,after*,limit*,occurredAfter*,occurredBefore*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieve activity history for user actions related to approvals, content updates, CRM object updates, security activity, and more (Enterprise only). Learn more about [activities included in audit log exports](https://knowledge.hubspot.com/account-management/view-and-export-account-activity-history-in-a-centralized-audit-log?hubs_content=knowledge.hubspot.com/account-management/view-and-export-account-activity-history&amp;hubs_content-cta=centralized%20audit%20log#data-included-in-the-centralized-audit-log).
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.CollectionResponsePublicApiUserActionEventForwardPaging"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.CollectionResponsePublicApiUserActionEventForwardPaging?> GetAsync(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder.AuditLogsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.CollectionResponsePublicApiUserActionEventForwardPaging> GetAsync(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder.AuditLogsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.CollectionResponsePublicApiUserActionEventForwardPaging>(requestInfo, global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.Models.CollectionResponsePublicApiUserActionEventForwardPaging.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieve activity history for user actions related to approvals, content updates, CRM object updates, security activity, and more (Enterprise only). Learn more about [activities included in audit log exports](https://knowledge.hubspot.com/account-management/view-and-export-account-activity-history-in-a-centralized-audit-log?hubs_content=knowledge.hubspot.com/account-management/view-and-export-account-activity-history&amp;hubs_content-cta=centralized%20audit%20log#data-included-in-the-centralized-audit-log).
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder.AuditLogsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder.AuditLogsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieve activity history for user actions related to approvals, content updates, CRM object updates, security activity, and more (Enterprise only). Learn more about [activities included in audit log exports](https://knowledge.hubspot.com/account-management/view-and-export-account-activity-history-in-a-centralized-audit-log?hubs_content=knowledge.hubspot.com/account-management/view-and-export-account-activity-history&amp;hubs_content-cta=centralized%20audit%20log#data-included-in-the-centralized-audit-log).
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AuditLogsRequestBuilderGetQueryParameters 
        {
            /// <summary>The ID of a user, for retrieving user-specific logs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("actingUserId")]
            public int?[]? ActingUserId { get; set; }
#nullable restore
#else
            [QueryParameter("actingUserId")]
            public int?[] ActingUserId { get; set; }
#endif
            /// <summary>The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("after")]
            public string? After { get; set; }
#nullable restore
#else
            [QueryParameter("after")]
            public string After { get; set; }
#endif
            /// <summary>The maximum number of results to display per page.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>A timestamp, as a starting point for retrieving activity logs. </summary>
            [QueryParameter("occurredAfter")]
            public DateTimeOffset? OccurredAfter { get; set; }
            /// <summary>A timestamp, as an end point for retrieving activity logs. </summary>
            [QueryParameter("occurredBefore")]
            public DateTimeOffset? OccurredBefore { get; set; }
            /// <summary>Set to `occurredAt` to order results by the time of the event. By default, events are ordered from oldest to newest.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AuditLogsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::DamianH.HubSpot.KiotaClient.Account.AuditLogs.V3.AccountInfo.V3.Activity.AuditLogs.AuditLogsRequestBuilder.AuditLogsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
