// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MultiStringPropertyOperation : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The coalescingRefineBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy? CoalescingRefineBy { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy CoalescingRefineBy { get; set; }
#endif
        /// <summary>The defaultValue property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultValue { get; set; }
#nullable restore
#else
        public string DefaultValue { get; set; }
#endif
        /// <summary>The includeObjectsWithNoValueSet property</summary>
        public bool? IncludeObjectsWithNoValueSet { get; set; }
        /// <summary>The operationType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OperationType { get; set; }
#nullable restore
#else
        public string OperationType { get; set; }
#endif
        /// <summary>The operator property</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_operator? Operator { get; set; }
        /// <summary>The operatorName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OperatorName { get; set; }
#nullable restore
#else
        public string OperatorName { get; set; }
#endif
        /// <summary>The propertyType property</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_propertyType? PropertyType { get; set; }
        /// <summary>The pruningRefineBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy? PruningRefineBy { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy PruningRefineBy { get; set; }
#endif
        /// <summary>The values property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Values { get; set; }
#nullable restore
#else
        public List<string> Values { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation"/> and sets the default values.
        /// </summary>
        public MultiStringPropertyOperation()
        {
            AdditionalData = new Dictionary<string, object>();
            PropertyType = global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_propertyType.Multistring;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "coalescingRefineBy", n => { CoalescingRefineBy = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy.CreateFromDiscriminatorValue); } },
                { "defaultValue", n => { DefaultValue = n.GetStringValue(); } },
                { "includeObjectsWithNoValueSet", n => { IncludeObjectsWithNoValueSet = n.GetBoolValue(); } },
                { "operationType", n => { OperationType = n.GetStringValue(); } },
                { "operator", n => { Operator = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_operator>(); } },
                { "operatorName", n => { OperatorName = n.GetStringValue(); } },
                { "propertyType", n => { PropertyType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_propertyType>(); } },
                { "pruningRefineBy", n => { PruningRefineBy = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy.CreateFromDiscriminatorValue); } },
                { "values", n => { Values = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy>("coalescingRefineBy", CoalescingRefineBy);
            writer.WriteStringValue("defaultValue", DefaultValue);
            writer.WriteBoolValue("includeObjectsWithNoValueSet", IncludeObjectsWithNoValueSet);
            writer.WriteStringValue("operationType", OperationType);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_operator>("operator", Operator);
            writer.WriteStringValue("operatorName", OperatorName);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation_propertyType>("propertyType", PropertyType);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy>("pruningRefineBy", PruningRefineBy);
            writer.WriteCollectionOfPrimitiveValues<string>("values", Values);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class MultiStringPropertyOperation_coalescingRefineBy : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy? NumOccurrencesRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy NumOccurrencesRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy? SetOccurrencesRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy SetOccurrencesRefineBy { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_coalescingRefineBy();
                if("NumOccurrencesRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumOccurrencesRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy();
                }
                else if("SetOccurrencesRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SetOccurrencesRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(NumOccurrencesRefineBy != null)
                {
                    return NumOccurrencesRefineBy.GetFieldDeserializers();
                }
                else if(SetOccurrencesRefineBy != null)
                {
                    return SetOccurrencesRefineBy.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(NumOccurrencesRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.NumOccurrencesRefineBy>(null, NumOccurrencesRefineBy);
                }
                else if(SetOccurrencesRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.SetOccurrencesRefineBy>(null, SetOccurrencesRefineBy);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy"/>, <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class MultiStringPropertyOperation_pruningRefineBy : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy? AbsoluteComparativeTimestampRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy AbsoluteComparativeTimestampRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy? AbsoluteRangedTimestampRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy AbsoluteRangedTimestampRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy? AllHistoryRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy AllHistoryRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation? RangedTimeOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation RangedTimeOperation { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy? RelativeComparativeTimestampRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy RelativeComparativeTimestampRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy? RelativeRangedTimestampRefineBy { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy RelativeRangedTimestampRefineBy { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation? TimePointOperation { get; set; }
#nullable restore
#else
            public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation TimePointOperation { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.MultiStringPropertyOperation.MultiStringPropertyOperation_pruningRefineBy();
                if("AbsoluteComparativeTimestampRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AbsoluteComparativeTimestampRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy();
                }
                else if("AbsoluteRangedTimestampRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AbsoluteRangedTimestampRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy();
                }
                else if("AllHistoryRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AllHistoryRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy();
                }
                else if("RangedTimeOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RangedTimeOperation = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation();
                }
                else if("RelativeComparativeTimestampRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RelativeComparativeTimestampRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy();
                }
                else if("RelativeRangedTimestampRefineBy".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RelativeRangedTimestampRefineBy = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy();
                }
                else if("TimePointOperation".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TimePointOperation = new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AbsoluteComparativeTimestampRefineBy != null)
                {
                    return AbsoluteComparativeTimestampRefineBy.GetFieldDeserializers();
                }
                else if(AbsoluteRangedTimestampRefineBy != null)
                {
                    return AbsoluteRangedTimestampRefineBy.GetFieldDeserializers();
                }
                else if(AllHistoryRefineBy != null)
                {
                    return AllHistoryRefineBy.GetFieldDeserializers();
                }
                else if(RangedTimeOperation != null)
                {
                    return RangedTimeOperation.GetFieldDeserializers();
                }
                else if(RelativeComparativeTimestampRefineBy != null)
                {
                    return RelativeComparativeTimestampRefineBy.GetFieldDeserializers();
                }
                else if(RelativeRangedTimestampRefineBy != null)
                {
                    return RelativeRangedTimestampRefineBy.GetFieldDeserializers();
                }
                else if(TimePointOperation != null)
                {
                    return TimePointOperation.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(AbsoluteComparativeTimestampRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteComparativeTimestampRefineBy>(null, AbsoluteComparativeTimestampRefineBy);
                }
                else if(AbsoluteRangedTimestampRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AbsoluteRangedTimestampRefineBy>(null, AbsoluteRangedTimestampRefineBy);
                }
                else if(AllHistoryRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AllHistoryRefineBy>(null, AllHistoryRefineBy);
                }
                else if(RangedTimeOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RangedTimeOperation>(null, RangedTimeOperation);
                }
                else if(RelativeComparativeTimestampRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeComparativeTimestampRefineBy>(null, RelativeComparativeTimestampRefineBy);
                }
                else if(RelativeRangedTimestampRefineBy != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.RelativeRangedTimestampRefineBy>(null, RelativeRangedTimestampRefineBy);
                }
                else if(TimePointOperation != null)
                {
                    writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.TimePointOperation>(null, TimePointOperation);
                }
            }
        }
    }
}
#pragma warning restore CS0618
