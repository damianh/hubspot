// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models
{
    /// <summary>
    /// A HubSpot property
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Property : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Whether the property is archived.</summary>
        public bool? Archived { get; set; }
        /// <summary>The timestamp when the property was archived, in ISO 8601 format.</summary>
        public DateTimeOffset? ArchivedAt { get; set; }
        /// <summary>Whether the property is a calculated field.</summary>
        public bool? Calculated { get; set; }
        /// <summary>The formula used for calculated properties.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CalculationFormula { get; set; }
#nullable restore
#else
        public string CalculationFormula { get; set; }
#endif
        /// <summary>The timestamp when the property was created, in ISO 8601 format.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The ID of the user who created the property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedUserId { get; set; }
#nullable restore
#else
        public string CreatedUserId { get; set; }
#endif
        /// <summary>Indicates the sensitivity level of the property, such as &quot;non_sensitive&quot;, &quot;sensitive&quot;, or &quot;highly_sensitive&quot;.</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property_dataSensitivity? DataSensitivity { get; set; }
        /// <summary>A summary of the property&apos;s purpose.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The position of the item relative to others in the list.</summary>
        public int? DisplayOrder { get; set; }
        /// <summary>Applicable only for enumeration type properties. Should be set to true with a &apos;referencedObjectType&apos; of &apos;OWNER&apos;. Otherwise false.</summary>
        public bool? ExternalOptions { get; set; }
        /// <summary>Determines how the property will appear in HubSpot&apos;s UI or on a form. Learn more in the properties API guide.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldType { get; set; }
#nullable restore
#else
        public string FieldType { get; set; }
#endif
        /// <summary>Whether the property can appear on forms.</summary>
        public bool? FormField { get; set; }
        /// <summary>The name of the group to which the property is assigned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupName { get; set; }
#nullable restore
#else
        public string GroupName { get; set; }
#endif
        /// <summary>Whether the property is a unique identifier property.</summary>
        public bool? HasUniqueValue { get; set; }
        /// <summary>Whether or not the property will be hidden from the HubSpot UI. It&apos;s recommended that this be set to false for custom properties.</summary>
        public bool? Hidden { get; set; }
        /// <summary>A boolean value set to true for HubSpot default properties.</summary>
        public bool? HubspotDefined { get; set; }
        /// <summary>The display label for the property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>The modificationMetadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.PropertyModificationMetadata? ModificationMetadata { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.PropertyModificationMetadata ModificationMetadata { get; set; }
#endif
        /// <summary>The internal name for the property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>A list of valid options for the property. This field is required for enumerated properties.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Option>? Options { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Option> Options { get; set; }
#endif
        /// <summary>Deprecated. Use externalOptionsReferenceType instead.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferencedObjectType { get; set; }
#nullable restore
#else
        public string ReferencedObjectType { get; set; }
#endif
        /// <summary>When sensitiveData is true, lists the type of sensitive data contained in the property (e.g., &quot;HIPAA&quot;).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SensitiveDataCategories { get; set; }
#nullable restore
#else
        public List<string> SensitiveDataCategories { get; set; }
#endif
        /// <summary>Whether to show the currency symbol in HubSpot&apos;s UI.</summary>
        public bool? ShowCurrencySymbol { get; set; }
        /// <summary>The data type of the property, such as string or number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The timestamp when the property was last updated, in ISO 8601 format.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The updatedUserId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedUserId { get; set; }
#nullable restore
#else
        public string UpdatedUserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property"/> and sets the default values.
        /// </summary>
        public Property()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "archived", n => { Archived = n.GetBoolValue(); } },
                { "archivedAt", n => { ArchivedAt = n.GetDateTimeOffsetValue(); } },
                { "calculated", n => { Calculated = n.GetBoolValue(); } },
                { "calculationFormula", n => { CalculationFormula = n.GetStringValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdUserId", n => { CreatedUserId = n.GetStringValue(); } },
                { "dataSensitivity", n => { DataSensitivity = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property_dataSensitivity>(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayOrder", n => { DisplayOrder = n.GetIntValue(); } },
                { "externalOptions", n => { ExternalOptions = n.GetBoolValue(); } },
                { "fieldType", n => { FieldType = n.GetStringValue(); } },
                { "formField", n => { FormField = n.GetBoolValue(); } },
                { "groupName", n => { GroupName = n.GetStringValue(); } },
                { "hasUniqueValue", n => { HasUniqueValue = n.GetBoolValue(); } },
                { "hidden", n => { Hidden = n.GetBoolValue(); } },
                { "hubspotDefined", n => { HubspotDefined = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "modificationMetadata", n => { ModificationMetadata = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.PropertyModificationMetadata>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.PropertyModificationMetadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "options", n => { Options = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Option>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Option.CreateFromDiscriminatorValue)?.AsList(); } },
                { "referencedObjectType", n => { ReferencedObjectType = n.GetStringValue(); } },
                { "sensitiveDataCategories", n => { SensitiveDataCategories = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "showCurrencySymbol", n => { ShowCurrencySymbol = n.GetBoolValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updatedUserId", n => { UpdatedUserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("archived", Archived);
            writer.WriteDateTimeOffsetValue("archivedAt", ArchivedAt);
            writer.WriteBoolValue("calculated", Calculated);
            writer.WriteStringValue("calculationFormula", CalculationFormula);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("createdUserId", CreatedUserId);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property_dataSensitivity>("dataSensitivity", DataSensitivity);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("displayOrder", DisplayOrder);
            writer.WriteBoolValue("externalOptions", ExternalOptions);
            writer.WriteStringValue("fieldType", FieldType);
            writer.WriteBoolValue("formField", FormField);
            writer.WriteStringValue("groupName", GroupName);
            writer.WriteBoolValue("hasUniqueValue", HasUniqueValue);
            writer.WriteBoolValue("hidden", Hidden);
            writer.WriteBoolValue("hubspotDefined", HubspotDefined);
            writer.WriteStringValue("label", Label);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.PropertyModificationMetadata>("modificationMetadata", ModificationMetadata);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Option>("options", Options);
            writer.WriteStringValue("referencedObjectType", ReferencedObjectType);
            writer.WriteCollectionOfPrimitiveValues<string>("sensitiveDataCategories", SensitiveDataCategories);
            writer.WriteBoolValue("showCurrencySymbol", ShowCurrencySymbol);
            writer.WriteStringValue("type", Type);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteStringValue("updatedUserId", UpdatedUserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
