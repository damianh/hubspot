// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models
{
    /// <summary>
    /// The definition of an association
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AssociationDefinition : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Whether custom labels can be used in the association.</summary>
        public bool? AllowsCustomLabels { get; set; }
        /// <summary>The cardinality from the source object&apos;s perspective, either &quot;ONE_TO_ONE&quot; or &quot;ONE_TO_MANY&quot;.</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_cardinality? Cardinality { get; set; }
        /// <summary>The category of the association. Can be: &quot;HUBSPOT_DEFINED&quot;, &quot;USER_DEFINED&quot;, or &quot;INTEGRATOR_DEFINED&quot;</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_category? Category { get; set; }
        /// <summary>The name of the source object type (e.g,. &quot;DEAL&quot; or &quot;QUOTE&quot;).</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_fromObjectType? FromObjectType { get; set; }
        /// <summary>The ID of the source object type (e.g., 0-1 for contacts).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FromObjectTypeId { get; set; }
#nullable restore
#else
        public string FromObjectTypeId { get; set; }
#endif
        /// <summary>Whether all potential linked objects are included in the association</summary>
        public bool? HasAllAssociatedObjects { get; set; }
        /// <summary>Whether deletions in the association should cause cascading deletes to linked objects.</summary>
        public bool? HasCascadingDeletes { get; set; }
        /// <summary>Whether a user has set a limit for the number of source objects.</summary>
        public bool? HasUserEnforcedMaxFromObjectIds { get; set; }
        /// <summary>Whether a user has set a limit for the number of destination objects.</summary>
        public bool? HasUserEnforcedMaxToObjectIds { get; set; }
        /// <summary>Whether the association is hidden or not.</summary>
        public bool? Hidden { get; set; }
        /// <summary>The unique ID of the associated object (e.g., a contact ID).</summary>
        public int? Id { get; set; }
        /// <summary>Whether the reverse association can also support custom labels.</summary>
        public bool? InverseAllowsCustomLabels { get; set; }
        /// <summary>The cardinality from the destination object&apos;s perspective, either &quot;ONE_TO_ONE&quot; or &quot;ONE_TO_MANY&quot;.</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_inverseCardinality? InverseCardinality { get; set; }
        /// <summary>Whether all potential reverse linked objects are included in the association.</summary>
        public bool? InverseHasAllAssociatedObjects { get; set; }
        /// <summary>The unique ID for the inverse side of the association.</summary>
        public int? InverseId { get; set; }
        /// <summary>The label used to describe the reverse relationship in an association.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InverseLabel { get; set; }
#nullable restore
#else
        public string InverseLabel { get; set; }
#endif
        /// <summary>The name used to describe the inverse relationship in this association</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InverseName { get; set; }
#nullable restore
#else
        public string InverseName { get; set; }
#endif
        /// <summary>Whether the inverse association is considered primary.</summary>
        public bool? IsInversePrimary { get; set; }
        /// <summary>Whether the association is the primary link between the entities involved.</summary>
        public bool? IsPrimary { get; set; }
        /// <summary>The label given to an association.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>The maximum number of source object IDs allowed in the association.</summary>
        public int? MaxFromObjectIds { get; set; }
        /// <summary>The maximum number of destination object IDs allowed in the association.</summary>
        public int? MaxToObjectIds { get; set; }
        /// <summary>For labeled association types, the internal name of the association.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>A unique across-portal ID applied to the association.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PortalUniqueIdentifier { get; set; }
#nullable restore
#else
        public string PortalUniqueIdentifier { get; set; }
#endif
        /// <summary>The name of the destination object type (e.g,. &quot;DEAL&quot; or &quot;QUOTE&quot;).</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_toObjectType? ToObjectType { get; set; }
        /// <summary>The ID of the destination object type (e.g., 0-3 for deals).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToObjectTypeId { get; set; }
#nullable restore
#else
        public string ToObjectTypeId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition"/> and sets the default values.
        /// </summary>
        public AssociationDefinition()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowsCustomLabels", n => { AllowsCustomLabels = n.GetBoolValue(); } },
                { "cardinality", n => { Cardinality = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_cardinality>(); } },
                { "category", n => { Category = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_category>(); } },
                { "fromObjectType", n => { FromObjectType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_fromObjectType>(); } },
                { "fromObjectTypeId", n => { FromObjectTypeId = n.GetStringValue(); } },
                { "hasAllAssociatedObjects", n => { HasAllAssociatedObjects = n.GetBoolValue(); } },
                { "hasCascadingDeletes", n => { HasCascadingDeletes = n.GetBoolValue(); } },
                { "hasUserEnforcedMaxFromObjectIds", n => { HasUserEnforcedMaxFromObjectIds = n.GetBoolValue(); } },
                { "hasUserEnforcedMaxToObjectIds", n => { HasUserEnforcedMaxToObjectIds = n.GetBoolValue(); } },
                { "hidden", n => { Hidden = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "inverseAllowsCustomLabels", n => { InverseAllowsCustomLabels = n.GetBoolValue(); } },
                { "inverseCardinality", n => { InverseCardinality = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_inverseCardinality>(); } },
                { "inverseHasAllAssociatedObjects", n => { InverseHasAllAssociatedObjects = n.GetBoolValue(); } },
                { "inverseId", n => { InverseId = n.GetIntValue(); } },
                { "inverseLabel", n => { InverseLabel = n.GetStringValue(); } },
                { "inverseName", n => { InverseName = n.GetStringValue(); } },
                { "isInversePrimary", n => { IsInversePrimary = n.GetBoolValue(); } },
                { "isPrimary", n => { IsPrimary = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "maxFromObjectIds", n => { MaxFromObjectIds = n.GetIntValue(); } },
                { "maxToObjectIds", n => { MaxToObjectIds = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "portalUniqueIdentifier", n => { PortalUniqueIdentifier = n.GetStringValue(); } },
                { "toObjectType", n => { ToObjectType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_toObjectType>(); } },
                { "toObjectTypeId", n => { ToObjectTypeId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("allowsCustomLabels", AllowsCustomLabels);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_cardinality>("cardinality", Cardinality);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_category>("category", Category);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_fromObjectType>("fromObjectType", FromObjectType);
            writer.WriteStringValue("fromObjectTypeId", FromObjectTypeId);
            writer.WriteBoolValue("hasAllAssociatedObjects", HasAllAssociatedObjects);
            writer.WriteBoolValue("hasCascadingDeletes", HasCascadingDeletes);
            writer.WriteBoolValue("hasUserEnforcedMaxFromObjectIds", HasUserEnforcedMaxFromObjectIds);
            writer.WriteBoolValue("hasUserEnforcedMaxToObjectIds", HasUserEnforcedMaxToObjectIds);
            writer.WriteBoolValue("hidden", Hidden);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("inverseAllowsCustomLabels", InverseAllowsCustomLabels);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_inverseCardinality>("inverseCardinality", InverseCardinality);
            writer.WriteBoolValue("inverseHasAllAssociatedObjects", InverseHasAllAssociatedObjects);
            writer.WriteIntValue("inverseId", InverseId);
            writer.WriteStringValue("inverseLabel", InverseLabel);
            writer.WriteStringValue("inverseName", InverseName);
            writer.WriteBoolValue("isInversePrimary", IsInversePrimary);
            writer.WriteBoolValue("isPrimary", IsPrimary);
            writer.WriteStringValue("label", Label);
            writer.WriteIntValue("maxFromObjectIds", MaxFromObjectIds);
            writer.WriteIntValue("maxToObjectIds", MaxToObjectIds);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("portalUniqueIdentifier", PortalUniqueIdentifier);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition_toObjectType>("toObjectType", ToObjectType);
            writer.WriteStringValue("toObjectTypeId", ToObjectTypeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
