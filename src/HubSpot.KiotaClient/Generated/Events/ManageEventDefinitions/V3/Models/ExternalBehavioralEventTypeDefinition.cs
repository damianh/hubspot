// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExternalBehavioralEventTypeDefinition : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The archived property</summary>
        public bool? Archived { get; set; }
        /// <summary>The associations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition>? Associations { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition> Associations { get; set; }
#endif
        /// <summary>The comboEventRules property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ComboEventRuleBranch? ComboEventRules { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ComboEventRuleBranch ComboEventRules { get; set; }
#endif
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The createdUserId property</summary>
        public int? CreatedUserId { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The fullyQualifiedName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FullyQualifiedName { get; set; }
#nullable restore
#else
        public string FullyQualifiedName { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The labels property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.BehavioralEventTypeDefinitionLabels? Labels { get; set; }
#nullable restore
#else
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.BehavioralEventTypeDefinitionLabels Labels { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The objectTypeId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ObjectTypeId { get; set; }
#nullable restore
#else
        public string ObjectTypeId { get; set; }
#endif
        /// <summary>The primaryObject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrimaryObject { get; set; }
#nullable restore
#else
        public string PrimaryObject { get; set; }
#endif
        /// <summary>The primaryObjectId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrimaryObjectId { get; set; }
#nullable restore
#else
        public string PrimaryObjectId { get; set; }
#endif
        /// <summary>The properties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property>? Properties { get; set; }
#nullable restore
#else
        public List<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property> Properties { get; set; }
#endif
        /// <summary>The trackingType property</summary>
        public global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition_trackingType? TrackingType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition"/> and sets the default values.
        /// </summary>
        public ExternalBehavioralEventTypeDefinition()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "archived", n => { Archived = n.GetBoolValue(); } },
                { "associations", n => { Associations = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "comboEventRules", n => { ComboEventRules = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ComboEventRuleBranch>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ComboEventRuleBranch.CreateFromDiscriminatorValue); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdUserId", n => { CreatedUserId = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "fullyQualifiedName", n => { FullyQualifiedName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "labels", n => { Labels = n.GetObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.BehavioralEventTypeDefinitionLabels>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.BehavioralEventTypeDefinitionLabels.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "objectTypeId", n => { ObjectTypeId = n.GetStringValue(); } },
                { "primaryObject", n => { PrimaryObject = n.GetStringValue(); } },
                { "primaryObjectId", n => { PrimaryObjectId = n.GetStringValue(); } },
                { "properties", n => { Properties = n.GetCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property>(global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property.CreateFromDiscriminatorValue)?.AsList(); } },
                { "trackingType", n => { TrackingType = n.GetEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition_trackingType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("archived", Archived);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.AssociationDefinition>("associations", Associations);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ComboEventRuleBranch>("comboEventRules", ComboEventRules);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteIntValue("createdUserId", CreatedUserId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("fullyQualifiedName", FullyQualifiedName);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.BehavioralEventTypeDefinitionLabels>("labels", Labels);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("objectTypeId", ObjectTypeId);
            writer.WriteStringValue("primaryObject", PrimaryObject);
            writer.WriteStringValue("primaryObjectId", PrimaryObjectId);
            writer.WriteCollectionOfObjectValues<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.Property>("properties", Properties);
            writer.WriteEnumValue<global::DamianH.HubSpot.KiotaClient.Events.ManageEventDefinitions.V3.Models.ExternalBehavioralEventTypeDefinition_trackingType>("trackingType", TrackingType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
